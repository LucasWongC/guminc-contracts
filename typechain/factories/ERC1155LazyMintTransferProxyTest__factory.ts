/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155LazyMintTransferProxyTest,
  ERC1155LazyMintTransferProxyTestInterface,
} from "../ERC1155LazyMintTransferProxyTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f20806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100a75780639870d7fe146100c5578063ac8a584a146100d8578063f2fde38b146100eb5761007d565b80632ff26a0a1461008257806354bc0cf11461008c578063715018a61461009f575b600080fd5b61008a6100fe565b005b61008a61009a366004610acf565b6101b0565b61008a6102a6565b6100af610352565b6040516100bc9190610c98565b60405180910390f35b61008a6100d33660046109b5565b610361565b61008a6100e63660046109b5565b6103e7565b61008a6100f93660046109b5565b61046a565b600054610100900460ff1680610117575061011761056d565b80610125575060005460ff16155b6101605760405162461bcd60e51b815260040180806020018281038252602e815260200180610e75602e913960400191505060405180910390fd5b600054610100900460ff1615801561018b576000805460ff1961ff0019909116610100171660011790555b61019361057e565b61019b610649565b80156101ad576000805461ff00191690555b50565b606560006101bc610742565b6001600160a01b0316815260208101919091526040016000205460ff166102145760405162461bcd60e51b8152600401808060200182810382526028815260200180610ec36028913960400191505060405180910390fd5b60008084600001516020015180602001905181019061023391906109d1565b91509150816001600160a01b031663ffc4e0a782868689602001516040518563ffffffff1660e01b815260040161026d9493929190610cac565b600060405180830381600087803b15801561028757600080fd5b505af115801561029b573d6000803e3d6000fd5b505050505050505050565b6102ae610742565b6001600160a01b03166102bf610352565b6001600160a01b031614610308576040805162461bcd60e51b81526020600482018190526024820152600080516020610ea3833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b610369610742565b6001600160a01b031661037a610352565b6001600160a01b0316146103c3576040805162461bcd60e51b81526020600482018190526024820152600080516020610ea3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b6103ef610742565b6001600160a01b0316610400610352565b6001600160a01b031614610449576040805162461bcd60e51b81526020600482018190526024820152600080516020610ea3833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b610472610742565b6001600160a01b0316610483610352565b6001600160a01b0316146104cc576040805162461bcd60e51b81526020600482018190526024820152600080516020610ea3833981519152604482015290519081900360640190fd5b6001600160a01b0381166105115760405162461bcd60e51b8152600401808060200182810382526026815260200180610e4f6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061057830610746565b15905090565b600054610100900460ff1680610597575061059761056d565b806105a5575060005460ff16155b6105e05760405162461bcd60e51b815260040180806020018281038252602e815260200180610e75602e913960400191505060405180910390fd5b600054610100900460ff1615801561060b576000805460ff1961ff0019909116610100171660011790555b61019b6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250610750565b600054610100900460ff1680610662575061066261056d565b80610670575060005460ff16155b6106ab5760405162461bcd60e51b815260040180806020018281038252602e815260200180610e75602e913960400191505060405180910390fd5b600054610100900460ff161580156106d6576000805460ff1961ff0019909116610100171660011790555b60006106e0610742565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101ad576000805461ff001916905550565b3390565b803b15155b919050565b6101ad816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561079457818101518382015260200161077c565b50505050905090810190601f1680156107c15780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905292506107f6915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600061082a61082584610de7565b610da5565b905082815283838301111561083e57600080fd5b61084c836020830184610e09565b9392505050565b803561074b81610e39565b600082601f83011261086e578081fd5b8151602061087e61082583610dc9565b82815281810190858301855b858110156108c8578151880189603f8201126108a4578788fd5b6108b58a8783015160408401610817565b855250928401929084019060010161088a565b5090979650505050505050565b600082601f8301126108e5578081fd5b815160206108f561082583610dc9565b82815281810190858301604080860288018501891015610913578687fd5b865b868110156109885781838b03121561092b578788fd5b815182810181811067ffffffffffffffff8211171561094657fe5b8352835161095381610e39565b8152838701516bffffffffffffffffffffffff8116811461097257898afd5b8188015285529385019391810191600101610915565b509198975050505050505050565b600082601f8301126109a6578081fd5b61084c83835160208501610817565b6000602082840312156109c6578081fd5b813561084c81610e39565b600080604083850312156109e3578081fd5b82516109ee81610e39565b602084015190925067ffffffffffffffff80821115610a0b578283fd5b9084019060c08287031215610a1e578283fd5b610a2860c0610da5565b82518152602083015182811115610a3d578485fd5b610a4988828601610996565b60208301525060408301516040820152606083015182811115610a6a578485fd5b610a76888286016108d5565b606083015250608083015182811115610a8d578485fd5b610a99888286016108d5565b60808301525060a083015182811115610ab0578485fd5b610abc8882860161085e565b60a0830152508093505050509250929050565b600080600060608486031215610ae3578081fd5b833567ffffffffffffffff80821115610afa578283fd5b81860191506040808389031215610b0f578384fd5b80518181018181108482111715610b2257fe5b808352843584811115610b33578687fd5b8501808b03841315610b43578687fd5b608083018281108682111715610b5557fe5b845280356001600160e01b031981168114610b6e578788fd5b825260208181013586811115610b82578889fd5b82019550601f86018c13610b94578788fd5b85359150610ba461082583610de7565b8281528c82848901011115610bb7578889fd5b828288018383013788828483010152806060860152508284528087013581850152839950610be6818c01610853565b985050505050610bf7818801610853565b93505050509250925092565b6001600160a01b03169052565b6000815180845260208085019450808401835b83811015610c6157815180516001600160a01b031688528301516bffffffffffffffffffffffff168388015260409096019590820190600101610c23565b509495945050505050565b60008151808452610c84816020860160208601610e09565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6000608082528551608083015260208087015160c060a0850152610cd4610140850182610c6c565b9050604088015160c08501526060880151607f19808684030160e0870152610cfc8383610c10565b925060808a015191508086840301610100870152610d1a8383610c10565b60a08b0151878203909201610120880152815180825290935090840191508383019084810284018501865b82811015610d7357601f19868303018452610d61828651610c6c565b94870194938701939150600101610d45565b508096505050505050610d8881840187610c03565b50610d966040830185610c03565b82606083015295945050505050565b60405181810167ffffffffffffffff81118282101715610dc157fe5b604052919050565b600067ffffffffffffffff821115610ddd57fe5b5060209081020190565b600067ffffffffffffffff821115610dfb57fe5b50601f01601f191660200190565b60005b83811015610e24578181015183820152602001610e0c565b83811115610e33576000848401525b50505050565b6001600160a01b03811681146101ad57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f70657261746f72526f6c653a2063616c6c6572206973206e6f7420746865206f70657261746f72a2646970667358221220ea6564415feca807a4557e631579b7f980a14ef870c5e8005ea41b407521457264736f6c63430007060033";

export class ERC1155LazyMintTransferProxyTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155LazyMintTransferProxyTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC1155LazyMintTransferProxyTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155LazyMintTransferProxyTest {
    return super.attach(address) as ERC1155LazyMintTransferProxyTest;
  }
  connect(signer: Signer): ERC1155LazyMintTransferProxyTest__factory {
    return super.connect(signer) as ERC1155LazyMintTransferProxyTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyMintTransferProxyTestInterface {
    return new utils.Interface(
      _abi
    ) as ERC1155LazyMintTransferProxyTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155LazyMintTransferProxyTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155LazyMintTransferProxyTest;
  }
}
