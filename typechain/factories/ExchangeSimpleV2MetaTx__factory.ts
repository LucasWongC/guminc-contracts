/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExchangeSimpleV2MetaTx,
  ExchangeSimpleV2MetaTxInterface,
} from "../ExchangeSimpleV2MetaTx";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "leftAsset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "rightAsset",
        type: "tuple",
      },
    ],
    name: "Match",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
    ],
    name: "__ExchangeSimpleV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613dbd806100206000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461014e57806398f1b95214610170578063b39deb4614610190578063e2864fe3146101b0578063e99a3f80146101d0578063f2fde38b146101e35761009c565b80630c53c51c146100a157806320158c44146100ca5780632d0335ab146100f757806330c642f114610117578063715018a614610139575b600080fd5b6100b46100af36600461332b565b610203565b6040516100c1919061383d565b60405180910390f35b3480156100d657600080fd5b506100ea6100e53660046133a6565b610566565b6040516100c19190613b1a565b34801561010357600080fd5b506100ea6101123660046132c6565b610579565b34801561012357600080fd5b506101376101323660046133be565b610595565b005b34801561014557600080fd5b50610137610665565b34801561015a57600080fd5b50610163610711565b6040516100c19190613786565b34801561017c57600080fd5b5061013761018b3660046133f6565b610721565b34801561019c57600080fd5b506101376101ab3660046133be565b61082c565b3480156101bc57600080fd5b506101376101cb36600461362e565b6108f0565b6101376101de366004613661565b6109c3565b3480156101ef57600080fd5b506101376101fe3660046132c6565b610a7f565b6060600061021086610b82565b90506000356001600160e01b031990811690821614156102615760405162461bcd60e51b815260040180806020018281038252603d815260200180613c2a603d913960400191505060405180910390fd5b604080516060810182526001600160a01b038916600081815261019360209081529084902054835282015290810187905261029f8882888888610ba2565b6102da5760405162461bcd60e51b8152600401808060200182810382526021815260200180613d676021913960400191505060405180910390fd5b6001600160a01b038816600090815261019360205260409020546102ff906001610c8c565b61019360008a6001600160a01b03166001600160a01b0316815260200190815260200160002081905550600080306001600160a01b0316898b6040516020018083805190602001908083835b6020831061036a5780518252601f19909201916020918201910161034b565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b031660601b8152601401925050506040516020818303038152906040526040518082805190602001908083835b602083106103e05780518252601f1990920191602091820191016103c1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610442576040519150601f19603f3d011682016040523d82523d6000602084013e610447565b606091505b50915091508161049e576040805162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000604482015290519081900360640190fd5b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8a338b60405180846001600160a01b03168152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561051d578181015183820152602001610505565b50505050905090810190601f16801561054a5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a19998505050505050505050565b61012f6020526000908152604090205481565b6001600160a01b03166000908152610193602052604090205490565b61059d610cef565b6001600160a01b03166105ae610711565b6001600160a01b0316146105f7576040805162461bcd60e51b81526020600482018190526024820152600080516020613d47833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c315359390610659908490613786565b60405180910390a25050565b61066d610cef565b6001600160a01b031661067e610711565b6001600160a01b0316146106c7576040805162461bcd60e51b81526020600482018190526024820152600080516020613d47833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b03165b90565b600054610100900460ff168061073a575061073a610cfe565b80610748575060005460ff16155b6107835760405162461bcd60e51b815260040180806020018281038252602e815260200180613cd6602e913960400191505060405180910390fd5b600054610100900460ff161580156107ae576000805460ff1961ff0019909116610100171660011790555b6107b6610d0f565b6107be610def565b6107c88383610ee8565b6107d0610f92565b6108156040518060400160405280600a81526020016922bc31b430b733b2ab1960b11b815250604051806040016040528060018152602001603160f81b815250611062565b8015610827576000805461ff00191690555b505050565b610834610cef565b6001600160a01b0316610845610711565b6001600160a01b03161461088e576040805162461bcd60e51b81526020600482018190526024820152600080516020613d47833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f90610659908490613786565b80516001600160a01b0316610903610cef565b6001600160a01b0316146109325760405162461bcd60e51b815260040161092990613a52565b60405180910390fd5b60808101516109535760405162461bcd60e51b8152600401610929906138f4565b600061095e826110e4565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e936109b7938693929161379a565b60405180910390a15050565b6109cd8484611253565b6109d78282611253565b60408401516001600160a01b031615610a235783604001516001600160a01b031682600001516001600160a01b031614610a235760405162461bcd60e51b8152600401610929906139e7565b60408201516001600160a01b031615610a6f5783600001516001600160a01b031682604001516001600160a01b031614610a6f5760405162461bcd60e51b815260040161092990613922565b610a79848361126a565b50505050565b610a87610cef565b6001600160a01b0316610a98610711565b6001600160a01b031614610ae1576040805162461bcd60e51b81526020600482018190526024820152600080516020613d47833981519152604482015290519081900360640190fd5b6001600160a01b038116610b265760405162461bcd60e51b8152600401808060200182810382526026815260200180613c046026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6000815160001415610b9657506000610b9d565b5060208101515b919050565b6000806001610bb8610bb388611403565b611486565b84878760405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610c0f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c6b576040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015290519081900360640190fd5b866001600160a01b0316816001600160a01b03161491505095945050505050565b600082820183811015610ce6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000610cf96114d2565b905090565b6000610d093061152e565b15905090565b600054610100900460ff1680610d285750610d28610cfe565b80610d36575060005460ff16155b610d715760405162461bcd60e51b815260040180806020018281038252602e815260200180613cd6602e913960400191505060405180910390fd5b600054610100900460ff16158015610d9c576000805460ff1961ff0019909116610100171660011790555b610dda6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250611534565b8015610dec576000805461ff00191690555b50565b600054610100900460ff1680610e085750610e08610cfe565b80610e16575060005460ff16155b610e515760405162461bcd60e51b815260040180806020018281038252602e815260200180613cd6602e913960400191505060405180910390fd5b600054610100900460ff16158015610e7c576000805460ff1961ff0019909116610100171660011790555b6000610e86610cef565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610dec576000805461ff001916905550565b60976020527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc080546001600160a01b039283166001600160a01b0319918216179091557f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d5805493909216928116831790915563025ceed960e61b6000527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f80549091169091179055565b600054610100900460ff1680610fab5750610fab610cfe565b80610fb9575060005460ff16155b610ff45760405162461bcd60e51b815260040180806020018281038252602e815260200180613cd6602e913960400191505060405180910390fd5b600054610100900460ff1615801561101f576000805460ff1961ff0019909116610100171660011790555b610dda6040518060400160405280600881526020016745786368616e676560c01b815250604051806040016040528060018152602001601960f91b8152506115da565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8280519060200120828051906020012061109b61169a565b6040805160208082019690965280820194909452606084019290925260808301523060a0808401919091528151808403909101815260c090920190528051910120610194555050565b60e08101516000906001600160e01b0319166323d235ef60e01b14156111e35781516020830151516111159061169e565b6060840151516111249061169e565b846080015185610100015160405160200180866001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611190578181015183820152602001611178565b50505050905090810190601f1680156111bd5780820380516001836020036101000a031916815260200191505b509650505050505050604051602081830303815290604052805190602001209050610b9d565b81516020830151516111f49061169e565b6060840151516112039061169e565b846080015160405160200180856001600160a01b03168152602001848152602001838152602001828152602001945050505050604051602081830303815290604052805190602001209050610b9d565b61125c82611708565b61126682826117d2565b5050565b6000806112778484611a5b565b915091506000611286856110e4565b90506000611293856110e4565b905060006112a087611af4565b905060006112ad87611af4565b905060006112bf898987878787611bf8565b90506000806112d38989858e8e8a8a611d23565b8a5191935091506001600160e01b0319166355575f5d60e11b14156113525787516001600160e01b0319166355575f5d60e11b141561131157600080fd5b813410156113315760405162461bcd60e51b815260040161092990613a2a565b8134111561134d5761134d6113463484611e16565b3390611e73565b6113a1565b87516001600160e01b0319166355575f5d60e11b14156113a1578034101561138c5760405162461bcd60e51b815260040161092990613a2a565b803411156113a1576113a16113463483611e16565b7f268820db288a211986b26a8fda86b1e0046281b21206936bb0e61c67b5c79ef487878d600001518d60000151876020015188600001518f8f6040516113ee9897969594939291906137e1565b60405180910390a15050505050505050505050565b6000604051806080016040528060438152602001613bc160439139805190602001208260000151836020015184604001518051906020012060405160200180858152602001848152602001836001600160a01b03168152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611490611f0b565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60003330141561152957600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b0316915061071e9050565b503390565b3b151590565b610dec816040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015611578578181015183820152602001611560565b50505050905090810190601f1680156115a55780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250611f12915050565b600054610100900460ff16806115f357506115f3610cfe565b80611601575060005460ff16155b61163c5760405162461bcd60e51b815260040180806020018281038252602e815260200180613cd6602e913960400191505060405180910390fd5b600054610100900460ff16158015611667576000805460ff1961ff0019909116610100171660011790555b825160208085019190912083519184019190912060c99190915560ca558015610827576000805461ff0019169055505050565b4690565b8051602091820151805190830120604080517f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c818601526001600160e01b031990931683820152606080840192909252805180840390920182526080909201909152805191012090565b60a0810151158061171c5750428160a00151105b61176d576040805162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c6564000000604482015290519081900360640190fd5b60c081015115806117815750428160c00151115b610dec576040805162461bcd60e51b815260206004820152601b60248201527f4f7264657220656e642076616c69646174696f6e206661696c65640000000000604482015290519081900360640190fd5b60808201516118705781516001600160a01b0316156118575781516001600160a01b03166117fe610cef565b6001600160a01b031614611852576040805162461bcd60e51b815260206004820152601660248201527536b0b5b2b91034b9903737ba103a3c1039b2b73232b960511b604482015290519081900360640190fd5b61186b565b61185f610cef565b6001600160a01b031682525b611266565b81516001600160a01b0316611883610cef565b6001600160a01b03161461126657600061189c83611f33565b905060008251604114156118c0576118bd836118b784612023565b9061202d565b90505b83516001600160a01b03828116911614610a795783516118e8906001600160a01b031661152e565b15611a24578351630b135d3f60e11b906001600160a01b0316631626ba7e61190f85612023565b866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561196257818101518382015260200161194a565b50505050905090810190601f16801561198f5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b1580156119ad57600080fd5b505afa1580156119c1573d6000803e3d6000fd5b505050506040513d60208110156119d757600080fd5b50516001600160e01b03191614611a1f5760405162461bcd60e51b815260040180806020018281038252602b815260200180613cab602b913960400191505060405180910390fd5b610a79565b60405162461bcd60e51b8152600401808060200182810382526022815260200180613c896022913960400191505060405180910390fd5b611a63612f6f565b611a6b612f6f565b602084015151606084015151611a8191906120a3565b80519092506001600160e01b031916611aac5760405162461bcd60e51b8152600401610929906139bb565b606084015151602084015151611ac291906120a3565b80519091506001600160e01b031916611aed5760405162461bcd60e51b8152600401610929906139bb565b9250929050565b611afc612f87565b60e08201516001600160e01b031916632611a13360e11b1415611b44576000611b298361010001516120e3565b80518352602090810151908301525060006040820152611bdf565b60e08201516001600160e01b0319166323d235ef60e01b1415611b7657611b6f8261010001516120ff565b9050611bdf565b60e08201516001600160e01b03199081161415611b9257611bdf565b6040805162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e204f7264657220646174612074797065000000000000000000604482015290519081900360640190fd5b805151610b9d578151611bf19061211b565b8152919050565b611c00612faa565b6000611c0c88876121bb565b90506000611c1a88876121bb565b90506000611c348a8a85858a604001518a604001516121e8565b905060008160200151118015611c4a5750805115155b611c665760405162461bcd60e51b815260040161092990613992565b60808a015115611cbd57856040015115611c9c578051611c87908490610c8c565b600089815261012f6020526040902055611cbd565b6020810151611cac908490610c8c565b600089815261012f60205260409020555b608089015115611d1457846040015115611cf6576020810151611ce1908390610c8c565b600088815261012f6020526040902055611d14565b8051611d03908390610c8c565b600088815261012f60205260409020555b925050505b9695505050505050565b8351835160408051808201909152898152875160208201528651600093849390929091611d939190837fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c961226e565b611dfc60405180604001604052808c81526020018b602001518152508860000151847fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b61226e565b505086516020909701519699969850959650505050505050565b600082821115611e6d576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114611ebe576040519150601f19603f3d011682016040523d82523d6000602084013e611ec3565b606091505b5050905080610827576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b6101945490565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d8260000151611f6884602001516125f5565b8460400151611f7a86606001516125f5565b86608001518760a001518860c001518960e001518a610100015180519060200120604051602001808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001836001600160e01b03191681526020018281526020019a5050505050505050505050604051602081830303815290604052805190602001209050919050565b6000611490612665565b60008151604114612085576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a611d19868285856126a0565b6120ab612f6f565b60006120b784846128f6565b80519091506001600160e01b0319166120dc576120d483856128f6565b915050610ce9565b9050610ce9565b6120eb612fc4565b81806020019051810190610ce991906134db565b612107612f87565b81806020019051810190610ce99190613577565b60408051600180825281830190925260609160009190816020015b61213e612fde565b815260200190600190039081612136579050509050828160008151811061216157fe5b6020026020010151600001906001600160a01b031690816001600160a01b0316815250506127108160008151811061219557fe5b6020908102919091018101516bffffffffffffffffffffffff9092169101529050919050565b60008260800151600014156121d257506000610ce9565b50600090815261012f6020526040902054919050565b6121f0612faa565b6000806121fe898887612b12565b915091506000806122108a8988612b12565b91509150838111156122435761223884848c60200151602001518d6060015160200151612b8c565b945050505050611d19565b61225f8b60200151602001518c60600151602001518484612c11565b9b9a5050505050505050505050565b8451516001600160e01b0319166355575f5d60e11b14156122a75760208501516122a2906001600160a01b03851690611e73565b6125af565b8451516001600160e01b0319166322ba176160e21b14156123855760008560000151602001518060200190518101906122e091906132e2565b6322ba176160e21b600052609760209081527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc0549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c39161234d9185918a918a9190600401613893565b600060405180830381600087803b15801561236757600080fd5b505af115801561237b573d6000803e3d6000fd5b50505050506125af565b8451516001600160e01b0319166339d690a360e11b1415612485576000808660000151602001518060200190518101906123bf91906132fe565b9150915086602001516001146123e75760405162461bcd60e51b815260040161092990613966565b6339d690a360e11b60005260976020527f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d554604051637b84dc8360e11b81526001600160a01b039091169063f709b9069061244c9085908a908a908790600401613893565b600060405180830381600087803b15801561246657600080fd5b505af115801561247a573d6000803e3d6000fd5b5050505050506125af565b8451516001600160e01b03191663025ceed960e61b141561252e576000808660000151602001518060200190518101906124bf91906132fe565b63025ceed960e61b600052609760209081527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f54908a0151604051639c1c2ee960e01b81529395509193506001600160a01b031691639c1c2ee99161244c9186918b918b918891600401613850565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf19061257c90889088908890600401613a9c565b600060405180830381600087803b15801561259657600080fd5b505af11580156125aa573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e85858585856040516125e6959493929190613acf565b60405180910390a15050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b08612625836000015161169e565b8360200151604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050919050565b6000610cf97f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612693612c97565b61269b612c9d565b612ca3565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156127015760405162461bcd60e51b8152600401808060200182810382526022815260200180613c676022913960400191505060405180910390fd5b6000601e8560ff1611156127db576004850360ff16601b148061272a57506004850360ff16601c145b6127655760405162461bcd60e51b8152600401808060200182810382526022815260200180613d046022913960400191505060405180910390fd5b600161277087612d06565b60048703868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156127ca573d6000803e3d6000fd5b505050602060405103519050612892565b8460ff16601b14806127f057508460ff16601c145b61282b5760405162461bcd60e51b8152600401808060200182810382526022815260200180613d046022913960400191505060405180910390fd5b60018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612885573d6000803e3d6000fd5b5050506020604051035190505b6001600160a01b0381166128ed576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b6128fe612f6f565b825182516001600160e01b031982166355575f5d60e11b1415612969576001600160e01b031981166355575f5d60e11b141561293e578492505050610ce9565b5050604080518082018252600080825282516020818101909452908152918101919091529050610ce9565b6001600160e01b031982166322ba176160e21b14156129ae576001600160e01b031981166322ba176160e21b141561293e576129a58585612d57565b92505050610ce9565b6001600160e01b031982166339d690a360e11b14156129ea576001600160e01b031981166339d690a360e11b141561293e576129a58585612d57565b6001600160e01b0319821663025ceed960e61b1415612a26576001600160e01b0319811663025ceed960e61b141561293e576129a58585612d57565b6001600160e01b031982166000908152606560205260409020546001600160a01b03168015612adb576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb090612a7d9089908990600401613a77565b60006040518083038186803b158015612a9557600080fd5b505afa158015612aa9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612ad19190810190613413565b9350505050610ce9565b6001600160e01b03198381169083161415612afa57612ad18686612d57565b60405162461bcd60e51b8152600401610929906138bd565b6000808215612b51576020808601510151612b2d9085611e16565b9150612b4a85606001516020015186602001516020015184612db4565b9050612b84565b606085015160200151612b649085611e16565b9050612b8185602001516020015186606001516020015183612db4565b91505b935093915050565b612b94612faa565b6000612ba1858585612db4565b905085811115612bf8576040805162461bcd60e51b815260206004820152601860248201527f66696c6c4c6566743a20756e61626c6520746f2066696c6c0000000000000000604482015290519081900360640190fd5b5050604080518082019091529384525050602082015290565b612c19612faa565b6000612c26838787612db4565b905083811115612c7d576040805162461bcd60e51b815260206004820152601960248201527f66696c6c52696768743a20756e61626c6520746f2066696c6c00000000000000604482015290519081900360640190fd5b604080518082019091529283526020830152509392505050565b60c95490565b60ca5490565b6000838383612cb061169a565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090505b9392505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b612d5f612f6f565b60208084015180519082012083820151805192019190912080821415612d89578492505050610ce9565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b6000612dc1848484612e20565b15612e04576040805162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b604482015290519081900360640190fd5b612e1883612e128685612eaf565b90612f08565b949350505050565b600082612e67576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b811580612e72575083155b15612e7f57506000612cff565b60008380612e8957fe5b8584099050612e988584612eaf565b612ea4826103e8612eaf565b101595945050505050565b600082612ebe57506000610ce9565b82820282848281612ecb57fe5b0414610ce65760405162461bcd60e51b8152600401808060200182810382526021815260200180613d266021913960400191505060405180910390fd5b6000808211612f5e576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381612f6757fe5b049392505050565b60408051808201909152600081526060602082015290565b604051806060016040528060608152602001606081526020016000151581525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b8035610b9d81613b95565b600082601f830112613010578081fd5b8151602067ffffffffffffffff8083111561302757fe5b6130348283850201613b23565b838152828101908684016040808702890186018a1015613052578788fd5b875b878110156130bf5781838c03121561306a578889fd5b8151828101818110888211171561307d57fe5b8352835161308a81613b95565b8152838801516bffffffffffffffffffffffff811681146130a9578a8bfd5b8189015285529386019391810191600101613054565b50919998505050505050505050565b8035610b9d81613baa565b600082601f8301126130e9578081fd5b81356130fc6130f782613b47565b613b23565b818152846020838601011115613110578283fd5b816020850160208301379081016020019190915292915050565b6000604080838503121561313c578182fd5b805181810167ffffffffffffffff828210818311171561315857fe5b81845282945085358181111561316d57600080fd5b860180880385131561317e57600080fd5b60808401838110838211171561319057fe5b90945283359361319f85613baa565b938252602084013593818511156131b557600080fd5b6131c1888683016130d9565b60608501525050815260209384013593019290925292915050565b60006101208083850312156131ef578182fd5b6131f881613b23565b91505061320482612ff5565b8152602082013567ffffffffffffffff8082111561322157600080fd5b61322d8583860161312a565b602084015261323e60408501612ff5565b6040840152606084013591508082111561325757600080fd5b6132638583860161312a565b60608401526080840135608084015260a084013560a084015260c084013560c084015261329260e085016130ce565b60e0840152610100915081840135818111156132ad57600080fd5b6132b9868287016130d9565b8385015250505092915050565b6000602082840312156132d7578081fd5b8135610ce681613b95565b6000602082840312156132f3578081fd5b8151610ce681613b95565b60008060408385031215613310578081fd5b825161331b81613b95565b6020939093015192949293505050565b600080600080600060a08688031215613342578081fd5b853561334d81613b95565b9450602086013567ffffffffffffffff811115613368578182fd5b613374888289016130d9565b9450506040860135925060608601359150608086013560ff81168114613398578182fd5b809150509295509295909350565b6000602082840312156133b7578081fd5b5035919050565b600080604083850312156133d0578182fd5b82356133db81613baa565b915060208301356133eb81613b95565b809150509250929050565b60008060408385031215613408578182fd5b82356133db81613b95565b60006020808385031215613425578182fd5b825167ffffffffffffffff8082111561343c578384fd5b908401906040828703121561344f578384fd5b60405160408101818110838211171561346457fe5b604052825161347281613baa565b81528284015182811115613484578586fd5b80840193505086601f840112613498578485fd5b825191506134a86130f783613b47565b82815287858486010111156134bb578586fd5b6134ca83868301878701613b69565b938101939093525090949350505050565b6000602082840312156134ec578081fd5b815167ffffffffffffffff80821115613503578283fd5b9083019060408286031215613516578283fd5b60405160408101818110838211171561352b57fe5b60405282518281111561353c578485fd5b61354887828601613000565b82525060208301518281111561355c578485fd5b61356887828601613000565b60208301525095945050505050565b600060208284031215613588578081fd5b815167ffffffffffffffff8082111561359f578283fd5b90830190606082860312156135b2578283fd5b6040516060810181811083821117156135c757fe5b6040528251828111156135d8578485fd5b6135e487828601613000565b8252506020830151828111156135f8578485fd5b61360487828601613000565b60208301525060408301519250821515831461361e578384fd5b6040810192909252509392505050565b60006020828403121561363f578081fd5b813567ffffffffffffffff811115613655578182fd5b612e18848285016131dc565b60008060008060808587031215613676578182fd5b843567ffffffffffffffff8082111561368d578384fd5b613699888389016131dc565b955060208701359150808211156136ae578384fd5b6136ba888389016130d9565b945060408701359150808211156136cf578384fd5b6136db888389016131dc565b935060608701359150808211156136f0578283fd5b506136fd878288016130d9565b91505092959194509250565b60008151808452613721816020860160208601613b69565b601f01601f19169290920160200192915050565b600063ffffffff60e01b8251168352602082015160406020850152612e186040850182613709565b60008151604084526137726040850182613735565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b8481526001600160a01b03841660208201526080604082018190526000906137c490830185613735565b82810360608401526137d68185613735565b979650505050505050565b888152602081018890526001600160a01b038781166040830152861660608201526080810185905260a0810184905261010060c0820181905260009061382983820186613735565b905082810360e084015261225f8185613735565b600060208252612cff6020830184613709565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60208082526017908201527f6e6f7420666f756e64204941737365744d617463686572000000000000000000604082015260600190565b6020808252601490820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b604082015260600190565b60208082526024908201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616040820152631a5b195960e21b606082015260800190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b6020808252600f908201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b60208082526023908201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696040820152621b195960ea1b606082015260800190565b6020808252600e908201526d0dcdee840cadcdeeaced040cae8d60931b604082015260600190565b6020808252600b908201526a3737ba10309036b0b5b2b960a91b604082015260600190565b600060408252613a8a6040830185613735565b82810360208401526128ed8185613735565b600060608252613aaf606083018661375d565b6001600160a01b0394851660208401529290931660409091015292915050565b600060a08252613ae260a083018861375d565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b90815260200190565b60405181810167ffffffffffffffff81118282101715613b3f57fe5b604052919050565b600067ffffffffffffffff821115613b5b57fe5b50601f01601f191660200190565b60005b83811015613b84578181015183820152602001613b6c565b83811115610a795750506000910152565b6001600160a01b0381168114610dec57600080fd5b6001600160e01b031981168114610dec57600080fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e6174757265294f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737366756e6374696f6e5369676e61747572652063616e206e6f74206265206f6620657865637574654d6574615472616e73616374696f6e206d6574686f6445434453413a20696e76616c6964207369676e6174757265202773272076616c75656f72646572207369676e617475726520766572696669636174696f6e206572726f72636f6e7472616374206f72646572207369676e617475726520766572696669636174696f6e206572726f72496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725369676e657220616e64207369676e617475726520646f206e6f74206d61746368a2646970667358221220b74063332f92275e007426b24b75ca12cbcc1124a7a5cb5f2ca00b0616343e8664736f6c63430007060033";

export class ExchangeSimpleV2MetaTx__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExchangeSimpleV2MetaTx> {
    return super.deploy(overrides || {}) as Promise<ExchangeSimpleV2MetaTx>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExchangeSimpleV2MetaTx {
    return super.attach(address) as ExchangeSimpleV2MetaTx;
  }
  connect(signer: Signer): ExchangeSimpleV2MetaTx__factory {
    return super.connect(signer) as ExchangeSimpleV2MetaTx__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeSimpleV2MetaTxInterface {
    return new utils.Interface(_abi) as ExchangeSimpleV2MetaTxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeSimpleV2MetaTx {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExchangeSimpleV2MetaTx;
  }
}
