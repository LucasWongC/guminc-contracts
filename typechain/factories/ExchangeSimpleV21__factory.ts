/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExchangeSimpleV21,
  ExchangeSimpleV21Interface,
} from "../ExchangeSimpleV21";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "leftAsset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "rightAsset",
        type: "tuple",
      },
    ],
    name: "Match",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
    ],
    name: "__ExchangeSimpleV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSomething",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061360e806100206000396000f3fe6080604052600436106100915760003560e01c806398f1b9521161005957806398f1b9521461013a578063b39deb461461015a578063e2864fe31461017a578063e99a3f801461019a578063f2fde38b146101ad57610091565b806301ec3b6c1461009657806320158c44146100c157806330c642f1146100e1578063715018a6146101035780638da5cb5b14610118575b600080fd5b3480156100a257600080fd5b506100ab6101cd565b6040516100b8919061340c565b60405180910390f35b3480156100cd57600080fd5b506100ab6100dc366004612cb6565b6101d2565b3480156100ed57600080fd5b506101016100fc366004612cce565b6101e5565b005b34801561010f57600080fd5b506101016102b5565b34801561012457600080fd5b5061012d610361565b6040516100b8919061308b565b34801561014657600080fd5b50610101610155366004612d06565b610370565b34801561016657600080fd5b50610101610175366004612cce565b610436565b34801561018657600080fd5b50610101610195366004612f3e565b6104fa565b6101016101a8366004612f71565b6105cd565b3480156101b957600080fd5b506101016101c8366004612c51565b610689565b600a90565b61012f6020526000908152604090205481565b6101ed61078c565b6001600160a01b03166101fe610361565b6001600160a01b031614610247576040805162461bcd60e51b815260206004820181905260248201526000805160206135b9833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c3153593906102a990849061308b565b60405180910390a25050565b6102bd61078c565b6001600160a01b03166102ce610361565b6001600160a01b031614610317576040805162461bcd60e51b815260206004820181905260248201526000805160206135b9833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b600054610100900460ff16806103895750610389610790565b80610397575060005460ff16155b6103d25760405162461bcd60e51b815260040180806020018281038252602e815260200180613548602e913960400191505060405180910390fd5b600054610100900460ff161580156103fd576000805460ff1961ff0019909116610100171660011790555b6104056107a1565b61040d610881565b610417838361097a565b61041f610a24565b8015610431576000805461ff00191690555b505050565b61043e61078c565b6001600160a01b031661044f610361565b6001600160a01b031614610498576040805162461bcd60e51b815260206004820181905260248201526000805160206135b9833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f906102a990849061308b565b80516001600160a01b031661050d61078c565b6001600160a01b03161461053c5760405162461bcd60e51b815260040161053390613344565b60405180910390fd5b608081015161055d5760405162461bcd60e51b8152600401610533906131e6565b600061056882610af4565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e936105c1938693929161309f565b60405180910390a15050565b6105d78484610c64565b6105e18282610c64565b60408401516001600160a01b03161561062d5783604001516001600160a01b031682600001516001600160a01b03161461062d5760405162461bcd60e51b8152600401610533906132d9565b60408201516001600160a01b0316156106795783600001516001600160a01b031682604001516001600160a01b0316146106795760405162461bcd60e51b815260040161053390613214565b6106838483610c7b565b50505050565b61069161078c565b6001600160a01b03166106a2610361565b6001600160a01b0316146106eb576040805162461bcd60e51b815260206004820181905260248201526000805160206135b9833981519152604482015290519081900360640190fd5b6001600160a01b0381166107305760405162461bcd60e51b81526004018080602001828103825260268152602001806134b36026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600061079b30610e14565b15905090565b600054610100900460ff16806107ba57506107ba610790565b806107c8575060005460ff16155b6108035760405162461bcd60e51b815260040180806020018281038252602e815260200180613548602e913960400191505060405180910390fd5b600054610100900460ff1615801561082e576000805460ff1961ff0019909116610100171660011790555b61086c6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250610e1a565b801561087e576000805461ff00191690555b50565b600054610100900460ff168061089a575061089a610790565b806108a8575060005460ff16155b6108e35760405162461bcd60e51b815260040180806020018281038252602e815260200180613548602e913960400191505060405180910390fd5b600054610100900460ff1615801561090e576000805460ff1961ff0019909116610100171660011790555b600061091861078c565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561087e576000805461ff001916905550565b60976020527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc080546001600160a01b039283166001600160a01b0319918216179091557f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d5805493909216928116831790915563025ceed960e61b6000527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f80549091169091179055565b600054610100900460ff1680610a3d5750610a3d610790565b80610a4b575060005460ff16155b610a865760405162461bcd60e51b815260040180806020018281038252602e815260200180613548602e913960400191505060405180910390fd5b600054610100900460ff16158015610ab1576000805460ff1961ff0019909116610100171660011790555b61086c6040518060400160405280600881526020016745786368616e676560c01b815250604051806040016040528060018152602001601960f91b815250610ec0565b60e08101516000906001600160e01b0319166323d235ef60e01b1415610bf3578151602083015151610b2590610f80565b606084015151610b3490610f80565b846080015185610100015160405160200180866001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ba0578181015183820152602001610b88565b50505050905090810190601f168015610bcd5780820380516001836020036101000a031916815260200191505b509650505050505050604051602081830303815290604052805190602001209050610c5f565b8151602083015151610c0490610f80565b606084015151610c1390610f80565b846080015160405160200180856001600160a01b031681526020018481526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090505b919050565b610c6d82610fea565b610c7782826110b4565b5050565b600080610c88848461133d565b915091506000610c9785610af4565b90506000610ca485610af4565b90506000610cb1876113d6565b90506000610cbe876113d6565b90506000610cd08989878787876114da565b9050600080610ce48989858e8e8a8a611605565b8a5191935091506001600160e01b0319166355575f5d60e11b1415610d635787516001600160e01b0319166355575f5d60e11b1415610d2257600080fd5b81341015610d425760405162461bcd60e51b81526004016105339061331c565b81341115610d5e57610d5e610d5734846116f8565b339061175a565b610db2565b87516001600160e01b0319166355575f5d60e11b1415610db25780341015610d9d5760405162461bcd60e51b81526004016105339061331c565b80341115610db257610db2610d5734836116f8565b7f268820db288a211986b26a8fda86b1e0046281b21206936bb0e61c67b5c79ef487878d600001518d60000151876020015188600001518f8f604051610dff9897969594939291906130e6565b60405180910390a15050505050505050505050565b3b151590565b61087e816040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610e5e578181015183820152602001610e46565b50505050905090810190601f168015610e8b5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905292506117f2915050565b600054610100900460ff1680610ed95750610ed9610790565b80610ee7575060005460ff16155b610f225760405162461bcd60e51b815260040180806020018281038252602e815260200180613548602e913960400191505060405180910390fd5b600054610100900460ff16158015610f4d576000805460ff1961ff0019909116610100171660011790555b825160208085019190912083519184019190912060c99190915560ca558015610431576000805461ff0019169055505050565b8051602091820151805190830120604080517f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c818601526001600160e01b031990931683820152606080840192909252805180840390920182526080909201909152805191012090565b60a08101511580610ffe5750428160a00151105b61104f576040805162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c6564000000604482015290519081900360640190fd5b60c081015115806110635750428160c00151115b61087e576040805162461bcd60e51b815260206004820152601b60248201527f4f7264657220656e642076616c69646174696f6e206661696c65640000000000604482015290519081900360640190fd5b60808201516111525781516001600160a01b0316156111395781516001600160a01b03166110e061078c565b6001600160a01b031614611134576040805162461bcd60e51b815260206004820152601660248201527536b0b5b2b91034b9903737ba103a3c1039b2b73232b960511b604482015290519081900360640190fd5b61114d565b61114161078c565b6001600160a01b031682525b610c77565b81516001600160a01b031661116561078c565b6001600160a01b031614610c7757600061117e83611813565b905060008251604114156111a25761119f8361119984611903565b9061194f565b90505b83516001600160a01b038281169116146106835783516111ca906001600160a01b0316610e14565b15611306578351630b135d3f60e11b906001600160a01b0316631626ba7e6111f185611903565b866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561124457818101518382015260200161122c565b50505050905090810190601f1680156112715780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561128f57600080fd5b505afa1580156112a3573d6000803e3d6000fd5b505050506040513d60208110156112b957600080fd5b50516001600160e01b031916146113015760405162461bcd60e51b815260040180806020018281038252602b81526020018061351d602b913960400191505060405180910390fd5b610683565b60405162461bcd60e51b81526004018080602001828103825260228152602001806134fb6022913960400191505060405180910390fd5b6113456128fa565b61134d6128fa565b60208401515160608401515161136391906119c5565b80519092506001600160e01b03191661138e5760405162461bcd60e51b8152600401610533906132ad565b6060840151516020840151516113a491906119c5565b80519091506001600160e01b0319166113cf5760405162461bcd60e51b8152600401610533906132ad565b9250929050565b6113de612912565b60e08201516001600160e01b031916632611a13360e11b141561142657600061140b836101000151611a05565b805183526020908101519083015250600060408201526114c1565b60e08201516001600160e01b0319166323d235ef60e01b141561145857611451826101000151611a21565b90506114c1565b60e08201516001600160e01b03199081161415611474576114c1565b6040805162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e204f7264657220646174612074797065000000000000000000604482015290519081900360640190fd5b805151610c5f5781516114d390611a3d565b8152919050565b6114e2612935565b60006114ee8887611add565b905060006114fc8887611add565b905060006115168a8a85858a604001518a60400151611b0a565b90506000816020015111801561152c5750805115155b6115485760405162461bcd60e51b815260040161053390613284565b60808a01511561159f5785604001511561157e578051611569908490611b90565b600089815261012f602052604090205561159f565b602081015161158e908490611b90565b600089815261012f60205260409020555b6080890151156115f6578460400151156115d85760208101516115c3908390611b90565b600088815261012f60205260409020556115f6565b80516115e5908390611b90565b600088815261012f60205260409020555b925050505b9695505050505050565b83518351604080518082019091528981528751602082015286516000938493909290916116759190837fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c9611bf1565b6116de60405180604001604052808c81526020018b602001518152508860000151847fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b611bf1565b505086516020909701519699969850959650505050505050565b60008282111561174f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b6040516000906001600160a01b0384169083908381818185875af1925050503d80600081146117a5576040519150601f19603f3d011682016040523d82523d6000602084013e6117aa565b606091505b5050905080610431576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d82600001516118488460200151611f78565b846040015161185a8660600151611f78565b86608001518760a001518860c001518960e001518a610100015180519060200120604051602001808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001836001600160e01b03191681526020018281526020019a5050505050505050505050604051602081830303815290604052805190602001209050919050565b600061190d611fe8565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b600081516041146119a7576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a6115fb86828585612028565b6119cd6128fa565b60006119d9848461227e565b80519091506001600160e01b0319166119fe576119f6838561227e565b915050611754565b9050611754565b611a0d61294f565b818060200190518101906117549190612deb565b611a29612912565b818060200190518101906117549190612e87565b60408051600180825281830190925260609160009190816020015b611a60612969565b815260200190600190039081611a585790505090508281600081518110611a8357fe5b6020026020010151600001906001600160a01b031690816001600160a01b03168152505061271081600081518110611ab757fe5b6020908102919091018101516bffffffffffffffffffffffff9092169101529050919050565b6000826080015160001415611af457506000611754565b50600090815261012f6020526040902054919050565b611b12612935565b600080611b2089888761249a565b91509150600080611b328a898861249a565b9150915083811115611b6557611b5a84848c60200151602001518d6060015160200151612514565b9450505050506115fb565b611b818b60200151602001518c60600151602001518484612599565b9b9a5050505050505050505050565b600082820183811015611bea576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b8451516001600160e01b0319166355575f5d60e11b1415611c2a576020850151611c25906001600160a01b0385169061175a565b611f32565b8451516001600160e01b0319166322ba176160e21b1415611d08576000856000015160200151806020019051810190611c639190612c6d565b6322ba176160e21b600052609760209081527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc0549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c391611cd09185918a918a9190600401613185565b600060405180830381600087803b158015611cea57600080fd5b505af1158015611cfe573d6000803e3d6000fd5b5050505050611f32565b8451516001600160e01b0319166339d690a360e11b1415611e0857600080866000015160200151806020019051810190611d429190612c89565b915091508660200151600114611d6a5760405162461bcd60e51b815260040161053390613258565b6339d690a360e11b60005260976020527f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d554604051637b84dc8360e11b81526001600160a01b039091169063f709b90690611dcf9085908a908a908790600401613185565b600060405180830381600087803b158015611de957600080fd5b505af1158015611dfd573d6000803e3d6000fd5b505050505050611f32565b8451516001600160e01b03191663025ceed960e61b1415611eb157600080866000015160200151806020019051810190611e429190612c89565b63025ceed960e61b600052609760209081527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f54908a0151604051639c1c2ee960e01b81529395509193506001600160a01b031691639c1c2ee991611dcf9186918b918b918891600401613142565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf190611eff9088908890889060040161338e565b600060405180830381600087803b158015611f1957600080fd5b505af1158015611f2d573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051611f699594939291906133c1565b60405180910390a15050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b08611fa88360000151610f80565b8360200151604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050919050565b60006120237f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61201661261f565b61201e612625565b61262b565b905090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156120895760405162461bcd60e51b81526004018080602001828103825260228152602001806134d96022913960400191505060405180910390fd5b6000601e8560ff161115612163576004850360ff16601b14806120b257506004850360ff16601c145b6120ed5760405162461bcd60e51b81526004018080602001828103825260228152602001806135766022913960400191505060405180910390fd5b60016120f88761268d565b60048703868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015612152573d6000803e3d6000fd5b50505060206040510351905061221a565b8460ff16601b148061217857508460ff16601c145b6121b35760405162461bcd60e51b81526004018080602001828103825260228152602001806135766022913960400191505060405180910390fd5b60018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561220d573d6000803e3d6000fd5b5050506020604051035190505b6001600160a01b038116612275576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b6122866128fa565b825182516001600160e01b031982166355575f5d60e11b14156122f1576001600160e01b031981166355575f5d60e11b14156122c6578492505050611754565b5050604080518082018252600080825282516020818101909452908152918101919091529050611754565b6001600160e01b031982166322ba176160e21b1415612336576001600160e01b031981166322ba176160e21b14156122c65761232d85856126de565b92505050611754565b6001600160e01b031982166339d690a360e11b1415612372576001600160e01b031981166339d690a360e11b14156122c65761232d85856126de565b6001600160e01b0319821663025ceed960e61b14156123ae576001600160e01b0319811663025ceed960e61b14156122c65761232d85856126de565b6001600160e01b031982166000908152606560205260409020546001600160a01b03168015612463576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb0906124059089908990600401613369565b60006040518083038186803b15801561241d57600080fd5b505afa158015612431573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124599190810190612d23565b9350505050611754565b6001600160e01b031983811690831614156124825761245986866126de565b60405162461bcd60e51b8152600401610533906131af565b60008082156124d95760208086015101516124b590856116f8565b91506124d28560600151602001518660200151602001518461273b565b905061250c565b6060850151602001516124ec90856116f8565b90506125098560200151602001518660600151602001518361273b565b91505b935093915050565b61251c612935565b600061252985858561273b565b905085811115612580576040805162461bcd60e51b815260206004820152601860248201527f66696c6c4c6566743a20756e61626c6520746f2066696c6c0000000000000000604482015290519081900360640190fd5b5050604080518082019091529384525050602082015290565b6125a1612935565b60006125ae83878761273b565b905083811115612605576040805162461bcd60e51b815260206004820152601960248201527f66696c6c52696768743a20756e61626c6520746f2066696c6c00000000000000604482015290519081900360640190fd5b604080518082019091529283526020830152509392505050565b60c95490565b60ca5490565b60008383836126386127a7565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6126e66128fa565b60208084015180519082012083820151805192019190912080821415612710578492505050611754565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b60006127488484846127ab565b1561278b576040805162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b604482015290519081900360640190fd5b61279f83612799868561283a565b90612893565b949350505050565b4690565b6000826127f2576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b8115806127fd575083155b1561280a57506000611bea565b6000838061281457fe5b8584099050612823858461283a565b61282f826103e861283a565b101595945050505050565b60008261284957506000611754565b8282028284828161285657fe5b0414611bea5760405162461bcd60e51b81526004018080602001828103825260218152602001806135986021913960400191505060405180910390fd5b60008082116128e9576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816128f257fe5b049392505050565b60408051808201909152600081526060602082015290565b604051806060016040528060608152602001606081526020016000151581525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b8035610c5f81613487565b600082601f83011261299b578081fd5b8151602067ffffffffffffffff808311156129b257fe5b6129bf8283850201613415565b838152828101908684016040808702890186018a10156129dd578788fd5b875b87811015612a4a5781838c0312156129f5578889fd5b81518281018181108882111715612a0857fe5b83528351612a1581613487565b8152838801516bffffffffffffffffffffffff81168114612a34578a8bfd5b81890152855293860193918101916001016129df565b50919998505050505050505050565b8035610c5f8161349c565b600082601f830112612a74578081fd5b8135612a87612a8282613439565b613415565b818152846020838601011115612a9b578283fd5b816020850160208301379081016020019190915292915050565b60006040808385031215612ac7578182fd5b805181810167ffffffffffffffff8282108183111715612ae357fe5b818452829450853581811115612af857600080fd5b8601808803851315612b0957600080fd5b608084018381108382111715612b1b57fe5b909452833593612b2a8561349c565b93825260208401359381851115612b4057600080fd5b612b4c88868301612a64565b60608501525050815260209384013593019290925292915050565b6000610120808385031215612b7a578182fd5b612b8381613415565b915050612b8f82612980565b8152602082013567ffffffffffffffff80821115612bac57600080fd5b612bb885838601612ab5565b6020840152612bc960408501612980565b60408401526060840135915080821115612be257600080fd5b612bee85838601612ab5565b60608401526080840135608084015260a084013560a084015260c084013560c0840152612c1d60e08501612a59565b60e084015261010091508184013581811115612c3857600080fd5b612c4486828701612a64565b8385015250505092915050565b600060208284031215612c62578081fd5b8135611bea81613487565b600060208284031215612c7e578081fd5b8151611bea81613487565b60008060408385031215612c9b578081fd5b8251612ca681613487565b6020939093015192949293505050565b600060208284031215612cc7578081fd5b5035919050565b60008060408385031215612ce0578182fd5b8235612ceb8161349c565b91506020830135612cfb81613487565b809150509250929050565b60008060408385031215612d18578182fd5b8235612ceb81613487565b60006020808385031215612d35578182fd5b825167ffffffffffffffff80821115612d4c578384fd5b9084019060408287031215612d5f578384fd5b604051604081018181108382111715612d7457fe5b6040528251612d828161349c565b81528284015182811115612d94578586fd5b80840193505086601f840112612da8578485fd5b82519150612db8612a8283613439565b8281528785848601011115612dcb578586fd5b612dda8386830187870161345b565b938101939093525090949350505050565b600060208284031215612dfc578081fd5b815167ffffffffffffffff80821115612e13578283fd5b9083019060408286031215612e26578283fd5b604051604081018181108382111715612e3b57fe5b604052825182811115612e4c578485fd5b612e588782860161298b565b825250602083015182811115612e6c578485fd5b612e788782860161298b565b60208301525095945050505050565b600060208284031215612e98578081fd5b815167ffffffffffffffff80821115612eaf578283fd5b9083019060608286031215612ec2578283fd5b604051606081018181108382111715612ed757fe5b604052825182811115612ee8578485fd5b612ef48782860161298b565b825250602083015182811115612f08578485fd5b612f148782860161298b565b602083015250604083015192508215158314612f2e578384fd5b6040810192909252509392505050565b600060208284031215612f4f578081fd5b813567ffffffffffffffff811115612f65578182fd5b61279f84828501612b67565b60008060008060808587031215612f86578182fd5b843567ffffffffffffffff80821115612f9d578384fd5b612fa988838901612b67565b95506020870135915080821115612fbe578384fd5b612fca88838901612a64565b94506040870135915080821115612fdf578384fd5b612feb88838901612b67565b93506060870135915080821115613000578283fd5b5061300d87828801612a64565b91505092959194509250565b600063ffffffff60e01b8251168352602082015160406020850152805180604086015261304d81606087016020850161345b565b601f01601f1916939093016060019392505050565b60008151604084526130776040850182613019565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b8481526001600160a01b03841660208201526080604082018190526000906130c990830185613019565b82810360608401526130db8185613019565b979650505050505050565b888152602081018890526001600160a01b038781166040830152861660608201526080810185905260a0810184905261010060c0820181905260009061312e83820186613019565b905082810360e0840152611b818185613019565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60208082526017908201527f6e6f7420666f756e64204941737365744d617463686572000000000000000000604082015260600190565b6020808252601490820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b604082015260600190565b60208082526024908201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616040820152631a5b195960e21b606082015260800190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b6020808252600f908201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b60208082526023908201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696040820152621b195960ea1b606082015260800190565b6020808252600e908201526d0dcdee840cadcdeeaced040cae8d60931b604082015260600190565b6020808252600b908201526a3737ba10309036b0b5b2b960a91b604082015260600190565b60006040825261337c6040830185613019565b82810360208401526122758185613019565b6000606082526133a16060830186613062565b6001600160a01b0394851660208401529290931660409091015292915050565b600060a082526133d460a0830188613062565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b90815260200190565b60405181810167ffffffffffffffff8111828210171561343157fe5b604052919050565b600067ffffffffffffffff82111561344d57fe5b50601f01601f191660200190565b60005b8381101561347657818101518382015260200161345e565b838111156106835750506000910152565b6001600160a01b038116811461087e57600080fd5b6001600160e01b03198116811461087e57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c75656f72646572207369676e617475726520766572696669636174696f6e206572726f72636f6e7472616374206f72646572207369676e617475726520766572696669636174696f6e206572726f72496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212207d50476eaff418203c2390e7d08b88de9371a450274a10063186ba83ed137e9664736f6c63430007060033";

export class ExchangeSimpleV21__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExchangeSimpleV21> {
    return super.deploy(overrides || {}) as Promise<ExchangeSimpleV21>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExchangeSimpleV21 {
    return super.attach(address) as ExchangeSimpleV21;
  }
  connect(signer: Signer): ExchangeSimpleV21__factory {
    return super.connect(signer) as ExchangeSimpleV21__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeSimpleV21Interface {
    return new utils.Interface(_abi) as ExchangeSimpleV21Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeSimpleV21 {
    return new Contract(address, _abi, signerOrProvider) as ExchangeSimpleV21;
  }
}
