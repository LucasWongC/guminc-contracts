/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibSignatureTest,
  LibSignatureTestInterface,
} from "../LibSignatureTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "getKeccak",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "recoverFromParamsTest",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "recoverFromSigTest",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063708b536d14610046578063cfa663e31461006f578063db79ddaf14610082575b600080fd5b610059610054366004610459565b6100a2565b6040516100669190610540565b60405180910390f35b61005961007d3660046104b1565b6100b5565b6100956100903660046104f2565b6100cc565b6040516100669190610554565b60006100ae83836100d7565b9392505050565b60006100c385858585610157565b95945050505050565b805160209091012090565b6000815160411461012f576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a61014d86828585610157565b9695505050505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156101b85760405162461bcd60e51b815260040180806020018281038252602281526020018061055e6022913960400191505060405180910390fd5b6000601e8560ff161115610292576004850360ff16601b14806101e157506004850360ff16601c145b61021c5760405162461bcd60e51b81526004018080602001828103825260228152602001806105806022913960400191505060405180910390fd5b6001610227876103a4565b60048703868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610281573d6000803e3d6000fd5b505050602060405103519050610349565b8460ff16601b14806102a757508460ff16601c145b6102e25760405162461bcd60e51b81526004018080602001828103825260228152602001806105806022913960400191505060405180910390fd5b60018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561033c573d6000803e3d6000fd5b5050506020604051035190505b6001600160a01b0381166100c3576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b600067ffffffffffffffff8084111561040a57fe5b604051601f8501601f19168101602001828111828210171561042857fe5b60405284815291508183850186101561044057600080fd5b8484602083013760006020868301015250509392505050565b6000806040838503121561046b578182fd5b82359150602083013567ffffffffffffffff811115610488578182fd5b8301601f81018513610498578182fd5b6104a7858235602084016103f5565b9150509250929050565b600080600080608085870312156104c6578182fd5b84359350602085013560ff811681146104dd578283fd5b93969395505050506040820135916060013590565b600060208284031215610503578081fd5b813567ffffffffffffffff811115610519578182fd5b8201601f81018413610529578182fd5b610538848235602084016103f5565b949350505050565b6001600160a01b0391909116815260200190565b9081526020019056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a264697066735822122073b40e6debbb7db0184751c1f23e0b89402e61b4f7febdc846537cebad0bbccb64736f6c63430007060033";

export class LibSignatureTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibSignatureTest> {
    return super.deploy(overrides || {}) as Promise<LibSignatureTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibSignatureTest {
    return super.attach(address) as LibSignatureTest;
  }
  connect(signer: Signer): LibSignatureTest__factory {
    return super.connect(signer) as LibSignatureTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibSignatureTestInterface {
    return new utils.Interface(_abi) as LibSignatureTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibSignatureTest {
    return new Contract(address, _abi, signerOrProvider) as LibSignatureTest;
  }
}
