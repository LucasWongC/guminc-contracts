/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OrderValidatorTest,
  OrderValidatorTestInterface,
} from "../OrderValidatorTest";

const _abi = [
  {
    inputs: [],
    name: "__OrderValidatorTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateOrderTest",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f57806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632bfcc6651461003b578063c56d89b514610050575b600080fd5b61004e610049366004610cbc565b610058565b005b61004e6100a5565b6100a061006484610d79565b83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061014f92505050565b505050565b600054610100900460ff16806100be57506100be6103df565b806100cc575060005460ff16155b6101075760405162461bcd60e51b815260040180806020018281038252602e815260200180610ed2602e913960400191505060405180910390fd5b600054610100900460ff16158015610132576000805460ff1961ff0019909116610100171660011790555b61013a6103f0565b801561014c576000805461ff00191690555b50565b60808201516101ed5781516001600160a01b0316156101d45781516001600160a01b031661017b6104c0565b6001600160a01b0316146101cf576040805162461bcd60e51b815260206004820152601660248201527536b0b5b2b91034b9903737ba103a3c1039b2b73232b960511b604482015290519081900360640190fd5b6101e8565b6101dc6104c0565b6001600160a01b031682525b6103db565b81516001600160a01b03166102006104c0565b6001600160a01b0316146103db576000610219836104c4565b9050600082516041141561023d5761023a83610234846105b5565b90610601565b90505b83516001600160a01b038281169116146103d8578351610265906001600160a01b0316610681565b156103a1578351630b135d3f60e11b906001600160a01b0316631626ba7e61028c856105b5565b866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102df5781810151838201526020016102c7565b50505050905090810190601f16801561030c5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d602081101561035457600080fd5b50516001600160e01b0319161461039c5760405162461bcd60e51b815260040180806020018281038252602b815260200180610ea7602b913960400191505060405180910390fd5b6103d8565b60405162461bcd60e51b8152600401808060200182810382526022815260200180610e856022913960400191505060405180910390fd5b50505b5050565b60006103ea30610681565b15905090565b600054610100900460ff168061040957506104096103df565b80610417575060005460ff16155b6104525760405162461bcd60e51b815260040180806020018281038252602e815260200180610ed2602e913960400191505060405180910390fd5b600054610100900460ff1615801561047d576000805460ff1961ff0019909116610100171660011790555b61013a6040518060400160405280600881526020016745786368616e676560c01b815250604051806040016040528060018152602001601960f91b815250610687565b3390565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d82600001516104f98460200151610747565b846040015161050b8660600151610747565b86608001518760a001518860c001518960e001518a610100015180519060200120604051602001808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001836001600160e01b03191681526020018281526020019a50505050505050505050506040516020818303038152906040528051906020012090505b919050565b60006105bf6107b7565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60008151604114610659576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a610677868285856107f7565b9695505050505050565b3b151590565b600054610100900460ff16806106a057506106a06103df565b806106ae575060005460ff16155b6106e95760405162461bcd60e51b815260040180806020018281038252602e815260200180610ed2602e913960400191505060405180910390fd5b600054610100900460ff16158015610714576000805460ff1961ff0019909116610100171660011790555b825160208085019190912083519184019190912060339190915560345580156100a0576000805461ff0019169055505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b086107778360000151610a4d565b8360200151604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050919050565b60006107f27f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6107e5610ab7565b6107ed610abd565b610ac3565b905090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156108585760405162461bcd60e51b8152600401808060200182810382526022815260200180610e636022913960400191505060405180910390fd5b6000601e8560ff161115610932576004850360ff16601b148061088157506004850360ff16601c145b6108bc5760405162461bcd60e51b8152600401808060200182810382526022815260200180610f006022913960400191505060405180910390fd5b60016108c787610b25565b60048703868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610921573d6000803e3d6000fd5b5050506020604051035190506109e9565b8460ff16601b148061094757508460ff16601c145b6109825760405162461bcd60e51b8152600401808060200182810382526022815260200180610f006022913960400191505060405180910390fd5b60018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156109dc573d6000803e3d6000fd5b5050506020604051035190505b6001600160a01b038116610a44576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b8051602091820151805190830120604080517f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c818601526001600160e01b031990931683820152606080840192909252805180840390920182526080909201909152805191012090565b60335490565b60345490565b6000838383610ad0610b76565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b4690565b80356001600160a01b03811681146105b057600080fd5b80356001600160e01b0319811681146105b057600080fd5b600082601f830112610bb9578081fd5b813567ffffffffffffffff811115610bcd57fe5b610be0601f8201601f1916602001610d55565b818152846020838601011115610bf4578283fd5b816020850160208301379081016020019190915292915050565b60006040808385031215610c20578182fd5b805181810167ffffffffffffffff8282108183111715610c3c57fe5b818452829450853581811115610c5157600080fd5b8601808803851315610c6257600080fd5b608084018381108382111715610c7457fe5b8552610c7f81610b91565b83526020810135945081851115610c9557600080fd5b610ca188868301610ba9565b60608501525050815260209384013593019290925292915050565b600080600060408486031215610cd0578283fd5b833567ffffffffffffffff80821115610ce7578485fd5b908501906101208288031215610cfb578485fd5b90935060208501359080821115610d10578384fd5b818601915086601f830112610d23578384fd5b813581811115610d31578485fd5b876020828501011115610d42578485fd5b6020830194508093505050509250925092565b60405181810167ffffffffffffffff81118282101715610d7157fe5b604052919050565b6000610120808336031215610d8c578182fd5b610d9581610d55565b9050610da083610b7a565b8152602083013567ffffffffffffffff80821115610dbc578384fd5b610dc836838701610c0e565b6020840152610dd960408601610b7a565b60408401526060850135915080821115610df1578384fd5b610dfd36838701610c0e565b60608401526080850135608084015260a085013560a084015260c085013560c0840152610e2c60e08601610b91565b60e084015261010091508185013581811115610e46578485fd5b610e5236828801610ba9565b838501525050508091505091905056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c75656f72646572207369676e617475726520766572696669636174696f6e206572726f72636f6e7472616374206f72646572207369676e617475726520766572696669636174696f6e206572726f72496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c7565a26469706673582212200586c941046093844c07c8cf7bb6a8083117b7787fd814a4097a3fe9ae219ac864736f6c63430007060033";

export class OrderValidatorTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OrderValidatorTest> {
    return super.deploy(overrides || {}) as Promise<OrderValidatorTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrderValidatorTest {
    return super.attach(address) as OrderValidatorTest;
  }
  connect(signer: Signer): OrderValidatorTest__factory {
    return super.connect(signer) as OrderValidatorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrderValidatorTestInterface {
    return new utils.Interface(_abi) as OrderValidatorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderValidatorTest {
    return new Contract(address, _abi, signerOrProvider) as OrderValidatorTest;
  }
}
