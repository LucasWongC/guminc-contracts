/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibFillTest, LibFillTestInterface } from "../LibFillTest";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "leftOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "rightOrder",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "leftOrderFill",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rightOrderFill",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "leftIsMakeFill",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "rightIsMakeFill",
        type: "bool",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "leftValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rightValue",
            type: "uint256",
          },
        ],
        internalType: "struct LibFill.FillResult",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638bae228814610030575b600080fd5b61004361003e36600461063f565b610059565b60405161005091906106d3565b60405180910390f35b6100616104b6565b61007f61006d8861070e565b6100768861070e565b8787878761008c565b90505b9695505050505050565b6100946104b6565b6000806100a2898887610112565b915091506000806100b48a8988610112565b91509150838111156100e7576100dc84848c60200151602001518d606001516020015161018c565b945050505050610082565b6101038b60200151602001518c60600151602001518484610211565b9b9a5050505050505050505050565b600080821561015157602080860151015161012d9085610297565b915061014a856060015160200151866020015160200151846102f9565b9050610184565b6060850151602001516101649085610297565b9050610181856020015160200151866060015160200151836102f9565b91505b935093915050565b6101946104b6565b60006101a18585856102f9565b9050858111156101f8576040805162461bcd60e51b815260206004820152601860248201527f66696c6c4c6566743a20756e61626c6520746f2066696c6c0000000000000000604482015290519081900360640190fd5b5050604080518082019091529384525050602082015290565b6102196104b6565b60006102268387876102f9565b90508381111561027d576040805162461bcd60e51b815260206004820152601960248201527f66696c6c52696768743a20756e61626c6520746f2066696c6c00000000000000604482015290519081900360640190fd5b604080518082019091529283526020830152509392505050565b6000828211156102ee576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b6000610306848484610365565b15610349576040805162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b604482015290519081900360640190fd5b61035d8361035786856103f6565b9061044f565b949350505050565b6000826103ac576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b8115806103b7575083155b156103c4575060006103ef565b600083806103ce57fe5b85840990506103dd85846103f6565b6103e9826103e86103f6565b10159150505b9392505050565b600082610405575060006102f3565b8282028284828161041257fe5b04146103ef5760405162461bcd60e51b81526004018080602001828103825260218152602001806107f86021913960400191505060405180910390fd5b60008082116104a5576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816104ae57fe5b049392505050565b604051806040016040528060008152602001600081525090565b80356001600160a01b03811681146104e757600080fd5b919050565b803580151581146104e757600080fd5b80356001600160e01b0319811681146104e757600080fd5b600082601f830112610524578081fd5b813567ffffffffffffffff81111561053857fe5b61054b601f8201601f19166020016106ea565b81815284602083860101111561055f578283fd5b816020850160208301379081016020019190915292915050565b6000604080838503121561058b578182fd5b805181810167ffffffffffffffff82821081831117156105a757fe5b8184528294508535818111156105bc57600080fd5b86018088038513156105cd57600080fd5b6080840183811083821117156105df57fe5b85526105ea816104fc565b8352602081013594508185111561060057600080fd5b61060c88868301610514565b60608501525050815260209384013593019290925292915050565b60006101208284031215610639578081fd5b50919050565b60008060008060008060c08789031215610657578182fd5b863567ffffffffffffffff8082111561066e578384fd5b61067a8a838b01610627565b9750602089013591508082111561068f578384fd5b5061069c89828a01610627565b95505060408701359350606087013592506106b9608088016104ec565b91506106c760a088016104ec565b90509295509295509295565b815181526020918201519181019190915260400190565b60405181810167ffffffffffffffff8111828210171561070657fe5b604052919050565b6000610120808336031215610721578182fd5b61072a816106ea565b9050610735836104d0565b8152602083013567ffffffffffffffff80821115610751578384fd5b61075d36838701610579565b602084015261076e604086016104d0565b60408401526060850135915080821115610786578384fd5b61079236838701610579565b60608401526080850135608084015260a085013560a084015260c085013560c08401526107c160e086016104fc565b60e0840152610100915081850135818111156107db578485fd5b6107e736828801610514565b838501525050508091505091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212206a1673ed01dcb915bcba21a9fab675c1d1d9e72223dcdceb8fe7c296c6592d9364736f6c63430007060033";

export class LibFillTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibFillTest> {
    return super.deploy(overrides || {}) as Promise<LibFillTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibFillTest {
    return super.attach(address) as LibFillTest;
  }
  connect(signer: Signer): LibFillTest__factory {
    return super.connect(signer) as LibFillTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibFillTestInterface {
    return new utils.Interface(_abi) as LibFillTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibFillTest {
    return new Contract(address, _abi, signerOrProvider) as LibFillTest;
  }
}
