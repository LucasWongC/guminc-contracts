/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RaribleSimpleTest,
  RaribleSimpleTestInterface,
} from "../RaribleSimpleTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "supply",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "creators",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "royalties",
            type: "tuple[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
        ],
        internalType: "struct LibERC1155LazyMint.Mint1155Data",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encode1155",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "creators",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "royalties",
            type: "tuple[]",
          },
          {
            internalType: "bytes[]",
            name: "signatures",
            type: "bytes[]",
          },
        ],
        internalType: "struct LibERC721LazyMint.Mint721Data",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encode721",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "matchNft",
        type: "tuple",
      },
    ],
    name: "getRoyaltiesByAssetTest",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltiesRegistry",
    outputs: [
      {
        internalType: "contract IRoyaltiesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRoyaltiesProvider",
        name: "newRoyaltiesRegistry",
        type: "address",
      },
    ],
    name: "setRoyaltiesRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611471806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636ff68a9c11610097578063b0e21e8a11610066578063b0e21e8a146101c4578063b35a799b146101d9578063e66db25e146101f9578063f2fde38b1461020c576100f5565b80636ff68a9c1461018e578063715018a6146101a1578063787dce3d146101a95780638da5cb5b146101bc576100f5565b80633abf6fd4116100d35780633abf6fd41461014b5780633be8992214610153578063498a5195146101665780636d8f069414610186576100f5565b806302097ab1146100fa5780631cdfe3d81461012357806330c642f114610138575b600080fd5b61010d610108366004610b98565b61021f565b60405161011a91906111a4565b60405180910390f35b610136610131366004610b98565b61023a565b005b610136610146366004610e46565b6102be565b61010d61038e565b610136610161366004610b98565b61039d565b610179610174366004610fd3565b610421565b60405161011a9190611313565b61010d61044d565b61017961019c366004610eeb565b61045c565b610136610471565b6101366101b73660046110b1565b61051d565b61010d610584565b6101cc610593565b60405161011a9190611326565b6101ec6101e7366004610e61565b610599565b60405161011a9190611300565b610136610207366004610dd3565b6105aa565b61013661021a366004610b98565b61063a565b6068602052600090815260409020546001600160a01b031681565b61024261073d565b6001600160a01b0316610253610584565b6001600160a01b03161461029c576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b6102c661073d565b6001600160a01b03166102d7610584565b6001600160a01b031614610320576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c3153593906103829084906111a4565b60405180910390a25050565b6067546001600160a01b031681565b6103a561073d565b6001600160a01b03166103b6610584565b6001600160a01b0316146103ff576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6060308260405160200161043692919061125a565b60405160208183030381529060405290505b919050565b6066546001600160a01b031681565b606030826040516020016104369291906111b8565b61047961073d565b6001600160a01b031661048a610584565b6001600160a01b0316146104d3576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b61052561073d565b6001600160a01b0316610536610584565b6001600160a01b03161461057f576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b606555565b6033546001600160a01b031690565b60655481565b60606105a482610741565b92915050565b6105b261073d565b6001600160a01b03166105c3610584565b6001600160a01b03161461060c576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b6001600160a01b03918216600090815260686020526040902080546001600160a01b03191691909216179055565b61064261073d565b6001600160a01b0316610653610584565b6001600160a01b03161461069c576040805162461bcd60e51b8152602060048201819052602482015260008051602061141c833981519152604482015290519081900360640190fd5b6001600160a01b0381166106e15760405162461bcd60e51b81526004018080602001828103825260268152602001806113f66026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b80516060906001600160e01b03191663025ceed960e61b1480610775575081516001600160e01b0319166339d690a360e11b145b1561082a5760008083602001518060200190518101906107959190610da6565b606654604051634e53ee3d60e11b81529294509092506001600160a01b031690639ca7dc7a906107cb90859085906004016112e7565b600060405180830381600087803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108219190810190610e0b565b92505050610448565b81516001600160e01b03191662737ea960e61b141561086d57600080836020015180602001905181019061085e9190610bb4565b60800151935061044892505050565b81516001600160e01b03191663d8f960c160e01b14156108b15760008083602001518060200190518101906108a29190610cb2565b60600151935061044892505050565b506060919050565b60006108cc6108c784611371565b61132f565b90508281528383830111156108e057600080fd5b6108ee836020830184611393565b9392505050565b600082601f830112610905578081fd5b813560206109156108c783611353565b82815281810190858301855b8581101561094a57610938898684358b0101610b2d565b84529284019290840190600101610921565b5090979650505050505050565b600082601f830112610967578081fd5b815160206109776108c783611353565b82815281810190858301855b8581101561094a578151880189603f82011261099d578788fd5b6109ae8a87830151604084016108b9565b8552509284019290840190600101610983565b600082601f8301126109d1578081fd5b813560206109e16108c783611353565b828152818101908583016040808602880185018910156109ff578687fd5b865b86811015610a645781838b031215610a17578788fd5b815182810181811067ffffffffffffffff82111715610a3257fe5b83528335610a3f816113c3565b815283870135610a4e816113db565b8188015285529385019391810191600101610a01565b509198975050505050505050565b600082601f830112610a82578081fd5b81516020610a926108c783611353565b82815281810190858301604080860288018501891015610ab0578687fd5b865b86811015610a645781838b031215610ac8578788fd5b815182810181811067ffffffffffffffff82111715610ae357fe5b83528351610af0816113c3565b815283870151610aff816113db565b8188015285529385019391810191600101610ab2565b80356001600160e01b03198116811461044857600080fd5b600082601f830112610b3d578081fd5b8135610b4b6108c782611371565b818152846020838601011115610b5f578283fd5b816020850160208301379081016020019190915292915050565b600082601f830112610b89578081fd5b6108ee838351602085016108b9565b600060208284031215610ba9578081fd5b81356108ee816113c3565b60008060408385031215610bc6578081fd5b8251610bd1816113c3565b602084015190925067ffffffffffffffff80821115610bee578283fd5b9084019060c08287031215610c01578283fd5b610c0b60c061132f565b82518152602083015182811115610c20578485fd5b610c2c88828601610b79565b60208301525060408301516040820152606083015182811115610c4d578485fd5b610c5988828601610a72565b606083015250608083015182811115610c70578485fd5b610c7c88828601610a72565b60808301525060a083015182811115610c93578485fd5b610c9f88828601610957565b60a0830152508093505050509250929050565b60008060408385031215610cc4578182fd5b8251610ccf816113c3565b602084015190925067ffffffffffffffff80821115610cec578283fd5b9084019060a08287031215610cff578283fd5b610d0960a061132f565b82518152602083015182811115610d1e578485fd5b610d2a88828601610b79565b602083015250604083015182811115610d41578485fd5b610d4d88828601610a72565b604083015250606083015182811115610d64578485fd5b610d7088828601610a72565b606083015250608083015182811115610d87578485fd5b610d9388828601610957565b6080830152508093505050509250929050565b60008060408385031215610db8578182fd5b8251610dc3816113c3565b6020939093015192949293505050565b60008060408385031215610de5578182fd5b8235610df0816113c3565b91506020830135610e00816113c3565b809150509250929050565b600060208284031215610e1c578081fd5b815167ffffffffffffffff811115610e32578182fd5b610e3e84828501610a72565b949350505050565b60008060408385031215610e58578182fd5b610df083610b15565b600060208284031215610e72578081fd5b813567ffffffffffffffff80821115610e89578283fd5b9083019060408286031215610e9c578283fd5b604051604081018181108382111715610eb157fe5b604052610ebd83610b15565b8152602083013582811115610ed0578485fd5b610edc87828601610b2d565b60208301525095945050505050565b600060208284031215610efc578081fd5b813567ffffffffffffffff80821115610f13578283fd5b9083019060c08286031215610f26578283fd5b610f3060c061132f565b82358152602083013582811115610f45578485fd5b610f5187828601610b2d565b60208301525060408301356040820152606083013582811115610f72578485fd5b610f7e878286016109c1565b606083015250608083013582811115610f95578485fd5b610fa1878286016109c1565b60808301525060a083013582811115610fb8578485fd5b610fc4878286016108f5565b60a08301525095945050505050565b600060208284031215610fe4578081fd5b813567ffffffffffffffff80821115610ffb578283fd5b9083019060a0828603121561100e578283fd5b61101860a061132f565b8235815260208301358281111561102d578485fd5b61103987828601610b2d565b602083015250604083013582811115611050578485fd5b61105c878286016109c1565b604083015250606083013582811115611073578485fd5b61107f878286016109c1565b606083015250608083013582811115611096578485fd5b6110a2878286016108f5565b60808301525095945050505050565b6000602082840312156110c2578081fd5b5035919050565b6000815180845260208085018081965082840281019150828601855b8581101561110f5782840389526110fd848351611178565b988501989350908401906001016110e5565b5091979650505050505050565b6000815180845260208085019450808401835b8381101561116d57815180516001600160a01b031688528301516bffffffffffffffffffffffff16838801526040909601959082019060010161112f565b509495945050505050565b60008151808452611190816020860160208601611393565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b600060018060a01b03841682526040602083015282516040830152602083015160c060608401526111ed610100840182611178565b9050604084015160808401526060840151603f19808584030160a0860152611215838361111c565b925060808601519150808584030160c0860152611232838361111c565b925060a08601519150808584030160e08601525061125082826110c9565b9695505050505050565b600060018060a01b03841682526040602083015282516040830152602083015160a0606084015261128e60e0840182611178565b90506040840151603f19808584030160808601526112ac838361111c565b925060608601519150808584030160a08601526112c9838361111c565b925060808601519150808584030160c08601525061125082826110c9565b6001600160a01b03929092168252602082015260400190565b6000602082526108ee602083018461111c565b6000602082526108ee6020830184611178565b90815260200190565b60405181810167ffffffffffffffff8111828210171561134b57fe5b604052919050565b600067ffffffffffffffff82111561136757fe5b5060209081020190565b600067ffffffffffffffff82111561138557fe5b50601f01601f191660200190565b60005b838110156113ae578181015183820152602001611396565b838111156113bd576000848401525b50505050565b6001600160a01b03811681146113d857600080fd5b50565b6bffffffffffffffffffffffff811681146113d857600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220c065adda74628303cc4af253aa4694dbade4608039c1ae0a7dd62d7d2b95263064736f6c63430007060033";

export class RaribleSimpleTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RaribleSimpleTest> {
    return super.deploy(overrides || {}) as Promise<RaribleSimpleTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RaribleSimpleTest {
    return super.attach(address) as RaribleSimpleTest;
  }
  connect(signer: Signer): RaribleSimpleTest__factory {
    return super.connect(signer) as RaribleSimpleTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaribleSimpleTestInterface {
    return new utils.Interface(_abi) as RaribleSimpleTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RaribleSimpleTest {
    return new Contract(address, _abi, signerOrProvider) as RaribleSimpleTest;
  }
}
