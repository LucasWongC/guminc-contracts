/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721LazyMintTransferProxyTest,
  ERC721LazyMintTransferProxyTestInterface,
} from "../ERC721LazyMintTransferProxyTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f57806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100a75780639870d7fe146100c5578063ac8a584a146100d8578063f2fde38b146100eb5761007d565b80632ff26a0a1461008257806354bc0cf11461008c578063715018a61461009f575b600080fd5b61008a6100fe565b005b61008a61009a366004610aed565b6101b0565b61008a6102ce565b6100af61037a565b6040516100bc9190610cb6565b60405180910390f35b61008a6100d33660046109dd565b610389565b61008a6100e63660046109dd565b61040f565b61008a6100f93660046109dd565b610492565b600054610100900460ff16806101175750610117610595565b80610125575060005460ff16155b6101605760405162461bcd60e51b815260040180806020018281038252602e815260200180610eac602e913960400191505060405180910390fd5b600054610100900460ff1615801561018b576000805460ff1961ff0019909116610100171660011790555b6101936105a6565b61019b610671565b80156101ad576000805461ff00191690555b50565b606560006101bc61076a565b6001600160a01b0316815260208101919091526040016000205460ff166102145760405162461bcd60e51b8152600401808060200182810382526028815260200180610efa6028913960400191505060405180910390fd5b82602001516001146102415760405162461bcd60e51b815260040161023890610cca565b60405180910390fd5b60008084600001516020015180602001905181019061026091906109f9565b60405163832fbb2960e01b815291935091506001600160a01b0383169063832fbb299061029590849088908890600401610cf6565b600060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050505050505050565b6102d661076a565b6001600160a01b03166102e761037a565b6001600160a01b031614610330576040805162461bcd60e51b81526020600482018190526024820152600080516020610eda833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b61039161076a565b6001600160a01b03166103a261037a565b6001600160a01b0316146103eb576040805162461bcd60e51b81526020600482018190526024820152600080516020610eda833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b61041761076a565b6001600160a01b031661042861037a565b6001600160a01b031614610471576040805162461bcd60e51b81526020600482018190526024820152600080516020610eda833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b61049a61076a565b6001600160a01b03166104ab61037a565b6001600160a01b0316146104f4576040805162461bcd60e51b81526020600482018190526024820152600080516020610eda833981519152604482015290519081900360640190fd5b6001600160a01b0381166105395760405162461bcd60e51b8152600401808060200182810382526026815260200180610e866026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60006105a03061076e565b15905090565b600054610100900460ff16806105bf57506105bf610595565b806105cd575060005460ff16155b6106085760405162461bcd60e51b815260040180806020018281038252602e815260200180610eac602e913960400191505060405180910390fd5b600054610100900460ff16158015610633576000805460ff1961ff0019909116610100171660011790555b61019b6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250610778565b600054610100900460ff168061068a575061068a610595565b80610698575060005460ff16155b6106d35760405162461bcd60e51b815260040180806020018281038252602e815260200180610eac602e913960400191505060405180910390fd5b600054610100900460ff161580156106fe576000805460ff1961ff0019909116610100171660011790555b600061070861076a565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101ad576000805461ff001916905550565b3390565b803b15155b919050565b6101ad816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156107bc5781810151838201526020016107a4565b50505050905090810190601f1680156107e95780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052925061081e915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600061085261084d84610e1e565b610ddc565b905082815283838301111561086657600080fd5b610874836020830184610e40565b9392505050565b803561077381610e70565b600082601f830112610896578081fd5b815160206108a661084d83610e00565b82815281810190858301855b858110156108f0578151880189603f8201126108cc578788fd5b6108dd8a878301516040840161083f565b85525092840192908401906001016108b2565b5090979650505050505050565b600082601f83011261090d578081fd5b8151602061091d61084d83610e00565b8281528181019085830160408086028801850189101561093b578687fd5b865b868110156109b05781838b031215610953578788fd5b815182810181811067ffffffffffffffff8211171561096e57fe5b8352835161097b81610e70565b8152838701516bffffffffffffffffffffffff8116811461099a57898afd5b818801528552938501939181019160010161093d565b509198975050505050505050565b600082601f8301126109ce578081fd5b6108748383516020850161083f565b6000602082840312156109ee578081fd5b813561087481610e70565b60008060408385031215610a0b578081fd5b8251610a1681610e70565b602084015190925067ffffffffffffffff80821115610a33578283fd5b9084019060a08287031215610a46578283fd5b610a5060a0610ddc565b82518152602083015182811115610a65578485fd5b610a71888286016109be565b602083015250604083015182811115610a88578485fd5b610a94888286016108fd565b604083015250606083015182811115610aab578485fd5b610ab7888286016108fd565b606083015250608083015182811115610ace578485fd5b610ada88828601610886565b6080830152508093505050509250929050565b600080600060608486031215610b01578081fd5b833567ffffffffffffffff80821115610b18578283fd5b81860191506040808389031215610b2d578384fd5b80518181018181108482111715610b4057fe5b808352843584811115610b51578687fd5b8501808b03841315610b61578687fd5b608083018281108682111715610b7357fe5b845280356001600160e01b031981168114610b8c578788fd5b825260208181013586811115610ba0578889fd5b82019550601f86018c13610bb2578788fd5b85359150610bc261084d83610e1e565b8281528c82848901011115610bd5578889fd5b828288018383013788828483010152806060860152508284528087013581850152839950610c04818c0161087b565b985050505050610c1581880161087b565b93505050509250925092565b6001600160a01b03169052565b6000815180845260208085019450808401835b83811015610c7f57815180516001600160a01b031688528301516bffffffffffffffffffffffff168388015260409096019590820190600101610c41565b509495945050505050565b60008151808452610ca2816020860160208601610e40565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b6000606082528451606083015260208086015160a06080850152610d1e610100850182610c8a565b90506040870151605f19808684030160a0870152610d3c8383610c2e565b925060608901519150808684030160c0870152610d598383610c2e565b60808a015187820390920160e0880152815180825290935090840191508383019084810284018501865b82811015610db157601f19868303018452610d9f828651610c8a565b94870194938701939150600101610d83565b508096505050505050610dc681840186610c21565b50610dd46040830184610c21565b949350505050565b60405181810167ffffffffffffffff81118282101715610df857fe5b604052919050565b600067ffffffffffffffff821115610e1457fe5b5060209081020190565b600067ffffffffffffffff821115610e3257fe5b50601f01601f191660200190565b60005b83811015610e5b578181015183820152602001610e43565b83811115610e6a576000848401525b50505050565b6001600160a01b03811681146101ad57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f70657261746f72526f6c653a2063616c6c6572206973206e6f7420746865206f70657261746f72a26469706673582212205c8a3169503fddb7d6695132b3abe8d0f379adccbe946d5d895c5e64f4106dde64736f6c63430007060033";

export class ERC721LazyMintTransferProxyTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721LazyMintTransferProxyTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC721LazyMintTransferProxyTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721LazyMintTransferProxyTest {
    return super.attach(address) as ERC721LazyMintTransferProxyTest;
  }
  connect(signer: Signer): ERC721LazyMintTransferProxyTest__factory {
    return super.connect(signer) as ERC721LazyMintTransferProxyTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721LazyMintTransferProxyTestInterface {
    return new utils.Interface(
      _abi
    ) as ERC721LazyMintTransferProxyTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721LazyMintTransferProxyTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721LazyMintTransferProxyTest;
  }
}
