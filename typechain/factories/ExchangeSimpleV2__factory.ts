/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExchangeSimpleV2,
  ExchangeSimpleV2Interface,
} from "../ExchangeSimpleV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "maker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "makeAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "takeAssetType",
        type: "tuple",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leftHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "rightHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "leftMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rightMaker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLeftFill",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRightFill",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "leftAsset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.AssetType",
        name: "rightAsset",
        type: "tuple",
      },
    ],
    name: "Match",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "MatcherChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
    ],
    name: "__ExchangeSimpleV2_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "fills",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderLeft",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureLeft",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "orderRight",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signatureRight",
        type: "bytes",
      },
    ],
    name: "matchOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "matcher",
        type: "address",
      },
    ],
    name: "setAssetMatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506135e9806100206000396000f3fe6080604052600436106100865760003560e01c806398f1b9521161005957806398f1b9521461011a578063b39deb461461013a578063e2864fe31461015a578063e99a3f801461017a578063f2fde38b1461018d57610086565b806320158c441461008b57806330c642f1146100c1578063715018a6146100e35780638da5cb5b146100f8575b600080fd5b34801561009757600080fd5b506100ab6100a6366004612c91565b6101ad565b6040516100b891906133e7565b60405180910390f35b3480156100cd57600080fd5b506100e16100dc366004612ca9565b6101c0565b005b3480156100ef57600080fd5b506100e1610290565b34801561010457600080fd5b5061010d61033c565b6040516100b89190613066565b34801561012657600080fd5b506100e1610135366004612ce1565b61034b565b34801561014657600080fd5b506100e1610155366004612ca9565b610411565b34801561016657600080fd5b506100e1610175366004612f19565b6104d5565b6100e1610188366004612f4c565b6105a8565b34801561019957600080fd5b506100e16101a8366004612c2c565b610664565b61012f6020526000908152604090205481565b6101c8610767565b6001600160a01b03166101d961033c565b6001600160a01b031614610222576040805162461bcd60e51b81526020600482018190526024820152600080516020613594833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c315359390610284908490613066565b60405180910390a25050565b610298610767565b6001600160a01b03166102a961033c565b6001600160a01b0316146102f2576040805162461bcd60e51b81526020600482018190526024820152600080516020613594833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b600054610100900460ff1680610364575061036461076b565b80610372575060005460ff16155b6103ad5760405162461bcd60e51b815260040180806020018281038252602e815260200180613523602e913960400191505060405180910390fd5b600054610100900460ff161580156103d8576000805460ff1961ff0019909116610100171660011790555b6103e061077c565b6103e861085c565b6103f28383610955565b6103fa6109ff565b801561040c576000805461ff00191690555b505050565b610419610767565b6001600160a01b031661042a61033c565b6001600160a01b031614610473576040805162461bcd60e51b81526020600482018190526024820152600080516020613594833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517fd2bf91075f105d0fd80328da28e20ebdad1c1261839711183bc29a44cbe6c72f90610284908490613066565b80516001600160a01b03166104e8610767565b6001600160a01b0316146105175760405162461bcd60e51b815260040161050e9061331f565b60405180910390fd5b60808101516105385760405162461bcd60e51b815260040161050e906131c1565b600061054382610acf565b600081815261012f602090815260409182902060001990558451908501515160608601515192519394507fbbdc98cb2835f4f846e6a63700d0498b4674f0e8858fd50c6379314227afa04e9361059c938693929161307a565b60405180910390a15050565b6105b28484610c3f565b6105bc8282610c3f565b60408401516001600160a01b0316156106085783604001516001600160a01b031682600001516001600160a01b0316146106085760405162461bcd60e51b815260040161050e906132b4565b60408201516001600160a01b0316156106545783600001516001600160a01b031682604001516001600160a01b0316146106545760405162461bcd60e51b815260040161050e906131ef565b61065e8483610c56565b50505050565b61066c610767565b6001600160a01b031661067d61033c565b6001600160a01b0316146106c6576040805162461bcd60e51b81526020600482018190526024820152600080516020613594833981519152604482015290519081900360640190fd5b6001600160a01b03811661070b5760405162461bcd60e51b815260040180806020018281038252602681526020018061348e6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600061077630610def565b15905090565b600054610100900460ff1680610795575061079561076b565b806107a3575060005460ff16155b6107de5760405162461bcd60e51b815260040180806020018281038252602e815260200180613523602e913960400191505060405180910390fd5b600054610100900460ff16158015610809576000805460ff1961ff0019909116610100171660011790555b6108476040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250610df5565b8015610859576000805461ff00191690555b50565b600054610100900460ff1680610875575061087561076b565b80610883575060005460ff16155b6108be5760405162461bcd60e51b815260040180806020018281038252602e815260200180613523602e913960400191505060405180910390fd5b600054610100900460ff161580156108e9576000805460ff1961ff0019909116610100171660011790555b60006108f3610767565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610859576000805461ff001916905550565b60976020527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc080546001600160a01b039283166001600160a01b0319918216179091557f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d5805493909216928116831790915563025ceed960e61b6000527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f80549091169091179055565b600054610100900460ff1680610a185750610a1861076b565b80610a26575060005460ff16155b610a615760405162461bcd60e51b815260040180806020018281038252602e815260200180613523602e913960400191505060405180910390fd5b600054610100900460ff16158015610a8c576000805460ff1961ff0019909116610100171660011790555b6108476040518060400160405280600881526020016745786368616e676560c01b815250604051806040016040528060018152602001601960f91b815250610e9b565b60e08101516000906001600160e01b0319166323d235ef60e01b1415610bce578151602083015151610b0090610f5b565b606084015151610b0f90610f5b565b846080015185610100015160405160200180866001600160a01b0316815260200185815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610b7b578181015183820152602001610b63565b50505050905090810190601f168015610ba85780820380516001836020036101000a031916815260200191505b509650505050505050604051602081830303815290604052805190602001209050610c3a565b8151602083015151610bdf90610f5b565b606084015151610bee90610f5b565b846080015160405160200180856001600160a01b031681526020018481526020018381526020018281526020019450505050506040516020818303038152906040528051906020012090505b919050565b610c4882610fc5565b610c52828261108f565b5050565b600080610c638484611318565b915091506000610c7285610acf565b90506000610c7f85610acf565b90506000610c8c876113b1565b90506000610c99876113b1565b90506000610cab8989878787876114b5565b9050600080610cbf8989858e8e8a8a6115e0565b8a5191935091506001600160e01b0319166355575f5d60e11b1415610d3e5787516001600160e01b0319166355575f5d60e11b1415610cfd57600080fd5b81341015610d1d5760405162461bcd60e51b815260040161050e906132f7565b81341115610d3957610d39610d3234846116d3565b3390611735565b610d8d565b87516001600160e01b0319166355575f5d60e11b1415610d8d5780341015610d785760405162461bcd60e51b815260040161050e906132f7565b80341115610d8d57610d8d610d3234836116d3565b7f268820db288a211986b26a8fda86b1e0046281b21206936bb0e61c67b5c79ef487878d600001518d60000151876020015188600001518f8f604051610dda9897969594939291906130c1565b60405180910390a15050505050505050505050565b3b151590565b610859816040516024018080602001828103825283818151815260200191508051906020019080838360005b83811015610e39578181015183820152602001610e21565b50505050905090810190601f168015610e665780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905292506117cd915050565b600054610100900460ff1680610eb45750610eb461076b565b80610ec2575060005460ff16155b610efd5760405162461bcd60e51b815260040180806020018281038252602e815260200180613523602e913960400191505060405180910390fd5b600054610100900460ff16158015610f28576000805460ff1961ff0019909116610100171660011790555b825160208085019190912083519184019190912060c99190915560ca55801561040c576000805461ff0019169055505050565b8051602091820151805190830120604080517f452a0dc408cb0d27ffc3b3caff933a5208040a53a9dbecd8d89cad2c0d40e00c818601526001600160e01b031990931683820152606080840192909252805180840390920182526080909201909152805191012090565b60a08101511580610fd95750428160a00151105b61102a576040805162461bcd60e51b815260206004820152601d60248201527f4f726465722073746172742076616c69646174696f6e206661696c6564000000604482015290519081900360640190fd5b60c0810151158061103e5750428160c00151115b610859576040805162461bcd60e51b815260206004820152601b60248201527f4f7264657220656e642076616c69646174696f6e206661696c65640000000000604482015290519081900360640190fd5b608082015161112d5781516001600160a01b0316156111145781516001600160a01b03166110bb610767565b6001600160a01b03161461110f576040805162461bcd60e51b815260206004820152601660248201527536b0b5b2b91034b9903737ba103a3c1039b2b73232b960511b604482015290519081900360640190fd5b611128565b61111c610767565b6001600160a01b031682525b610c52565b81516001600160a01b0316611140610767565b6001600160a01b031614610c52576000611159836117ee565b9050600082516041141561117d5761117a83611174846118de565b9061192a565b90505b83516001600160a01b0382811691161461065e5783516111a5906001600160a01b0316610def565b156112e1578351630b135d3f60e11b906001600160a01b0316631626ba7e6111cc856118de565b866040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561121f578181015183820152602001611207565b50505050905090810190601f16801561124c5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561126a57600080fd5b505afa15801561127e573d6000803e3d6000fd5b505050506040513d602081101561129457600080fd5b50516001600160e01b031916146112dc5760405162461bcd60e51b815260040180806020018281038252602b8152602001806134f8602b913960400191505060405180910390fd5b61065e565b60405162461bcd60e51b81526004018080602001828103825260228152602001806134d66022913960400191505060405180910390fd5b6113206128d5565b6113286128d5565b60208401515160608401515161133e91906119a0565b80519092506001600160e01b0319166113695760405162461bcd60e51b815260040161050e90613288565b60608401515160208401515161137f91906119a0565b80519091506001600160e01b0319166113aa5760405162461bcd60e51b815260040161050e90613288565b9250929050565b6113b96128ed565b60e08201516001600160e01b031916632611a13360e11b14156114015760006113e68361010001516119e0565b8051835260209081015190830152506000604082015261149c565b60e08201516001600160e01b0319166323d235ef60e01b14156114335761142c8261010001516119fc565b905061149c565b60e08201516001600160e01b0319908116141561144f5761149c565b6040805162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e204f7264657220646174612074797065000000000000000000604482015290519081900360640190fd5b805151610c3a5781516114ae90611a18565b8152919050565b6114bd612910565b60006114c98887611ab8565b905060006114d78887611ab8565b905060006114f18a8a85858a604001518a60400151611ae5565b9050600081602001511180156115075750805115155b6115235760405162461bcd60e51b815260040161050e9061325f565b60808a01511561157a57856040015115611559578051611544908490611b6b565b600089815261012f602052604090205561157a565b6020810151611569908490611b6b565b600089815261012f60205260409020555b6080890151156115d1578460400151156115b357602081015161159e908390611b6b565b600088815261012f60205260409020556115d1565b80516115c0908390611b6b565b600088815261012f60205260409020555b925050505b9695505050505050565b83518351604080518082019091528981528751602082015286516000938493909290916116509190837fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c9611bcc565b6116b960405180604001604052808c81526020018b602001518152508860000151847fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e7fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b611bcc565b505086516020909701519699969850959650505050505050565b60008282111561172a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114611780576040519150601f19603f3d011682016040523d82523d6000602084013e611785565b606091505b505090508061040c576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60007f477ed43b8020849b755512278536c3766a3b4ab547519949a75f483372493f8d82600001516118238460200151611f53565b84604001516118358660600151611f53565b86608001518760a001518860c001518960e001518a610100015180519060200120604051602001808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001836001600160e01b03191681526020018281526020019a5050505050505050505050604051602081830303815290604052805190602001209050919050565b60006118e8611fc3565b82604051602001808061190160f01b81525060020183815260200182815260200192505050604051602081830303815290604052805190602001209050919050565b60008151604114611982576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a6115d686828585612003565b6119a86128d5565b60006119b48484612259565b80519091506001600160e01b0319166119d9576119d18385612259565b91505061172f565b905061172f565b6119e861292a565b8180602001905181019061172f9190612dc6565b611a046128ed565b8180602001905181019061172f9190612e62565b60408051600180825281830190925260609160009190816020015b611a3b612944565b815260200190600190039081611a335790505090508281600081518110611a5e57fe5b6020026020010151600001906001600160a01b031690816001600160a01b03168152505061271081600081518110611a9257fe5b6020908102919091018101516bffffffffffffffffffffffff9092169101529050919050565b6000826080015160001415611acf5750600061172f565b50600090815261012f6020526040902054919050565b611aed612910565b600080611afb898887612475565b91509150600080611b0d8a8988612475565b9150915083811115611b4057611b3584848c60200151602001518d60600151602001516124ef565b9450505050506115d6565b611b5c8b60200151602001518c60600151602001518484612574565b9b9a5050505050505050505050565b600082820183811015611bc5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b8451516001600160e01b0319166355575f5d60e11b1415611c05576020850151611c00906001600160a01b03851690611735565b611f0d565b8451516001600160e01b0319166322ba176160e21b1415611ce3576000856000015160200151806020019051810190611c3e9190612c48565b6322ba176160e21b600052609760209081527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc0549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c391611cab9185918a918a9190600401613160565b600060405180830381600087803b158015611cc557600080fd5b505af1158015611cd9573d6000803e3d6000fd5b5050505050611f0d565b8451516001600160e01b0319166339d690a360e11b1415611de357600080866000015160200151806020019051810190611d1d9190612c64565b915091508660200151600114611d455760405162461bcd60e51b815260040161050e90613233565b6339d690a360e11b60005260976020527f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d554604051637b84dc8360e11b81526001600160a01b039091169063f709b90690611daa9085908a908a908790600401613160565b600060405180830381600087803b158015611dc457600080fd5b505af1158015611dd8573d6000803e3d6000fd5b505050505050611f0d565b8451516001600160e01b03191663025ceed960e61b1415611e8c57600080866000015160200151806020019051810190611e1d9190612c64565b63025ceed960e61b600052609760209081527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f54908a0151604051639c1c2ee960e01b81529395509193506001600160a01b031691639c1c2ee991611daa9186918b918b91889160040161311d565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf190611eda90889088908890600401613369565b600060405180830381600087803b158015611ef457600080fd5b505af1158015611f08573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051611f4495949392919061339c565b60405180910390a15050505050565b60007fdb6f72e915676cfc289da13bc4ece054fd17b1df6d77ffc4a60510718c236b08611f838360000151610f5b565b8360200151604051602001808481526020018381526020018281526020019350505050604051602081830303815290604052805190602001209050919050565b6000611ffe7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611ff16125fa565b611ff9612600565b612606565b905090565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156120645760405162461bcd60e51b81526004018080602001828103825260228152602001806134b46022913960400191505060405180910390fd5b6000601e8560ff16111561213e576004850360ff16601b148061208d57506004850360ff16601c145b6120c85760405162461bcd60e51b81526004018080602001828103825260228152602001806135516022913960400191505060405180910390fd5b60016120d387612668565b60048703868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa15801561212d573d6000803e3d6000fd5b5050506020604051035190506121f5565b8460ff16601b148061215357508460ff16601c145b61218e5760405162461bcd60e51b81526004018080602001828103825260228152602001806135516022913960400191505060405180910390fd5b60018686868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156121e8573d6000803e3d6000fd5b5050506020604051035190505b6001600160a01b038116612250576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b6122616128d5565b825182516001600160e01b031982166355575f5d60e11b14156122cc576001600160e01b031981166355575f5d60e11b14156122a157849250505061172f565b505060408051808201825260008082528251602081810190945290815291810191909152905061172f565b6001600160e01b031982166322ba176160e21b1415612311576001600160e01b031981166322ba176160e21b14156122a15761230885856126b9565b9250505061172f565b6001600160e01b031982166339d690a360e11b141561234d576001600160e01b031981166339d690a360e11b14156122a15761230885856126b9565b6001600160e01b0319821663025ceed960e61b1415612389576001600160e01b0319811663025ceed960e61b14156122a15761230885856126b9565b6001600160e01b031982166000908152606560205260409020546001600160a01b0316801561243e576040516306d3f7cb60e41b81526001600160a01b03821690636d3f7cb0906123e09089908990600401613344565b60006040518083038186803b1580156123f857600080fd5b505afa15801561240c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124349190810190612cfe565b935050505061172f565b6001600160e01b0319838116908316141561245d5761243486866126b9565b60405162461bcd60e51b815260040161050e9061318a565b60008082156124b457602080860151015161249090856116d3565b91506124ad85606001516020015186602001516020015184612716565b90506124e7565b6060850151602001516124c790856116d3565b90506124e485602001516020015186606001516020015183612716565b91505b935093915050565b6124f7612910565b6000612504858585612716565b90508581111561255b576040805162461bcd60e51b815260206004820152601860248201527f66696c6c4c6566743a20756e61626c6520746f2066696c6c0000000000000000604482015290519081900360640190fd5b5050604080518082019091529384525050602082015290565b61257c612910565b6000612589838787612716565b9050838111156125e0576040805162461bcd60e51b815260206004820152601960248201527f66696c6c52696768743a20756e61626c6520746f2066696c6c00000000000000604482015290519081900360640190fd5b604080518082019091529283526020830152509392505050565b60c95490565b60ca5490565b6000838383612613612782565b3060405160200180868152602001858152602001848152602001838152602001826001600160a01b03168152602001955050505050506040516020818303038152906040528051906020012090509392505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c909101909152815191012090565b6126c16128d5565b602080840151805190820120838201518051920191909120808214156126eb57849250505061172f565b5050604080518082018252600080825282516020808201909452908152918101919091529392505050565b6000612723848484612786565b15612766576040805162461bcd60e51b815260206004820152600e60248201526d3937bab73234b7339032b93937b960911b604482015290519081900360640190fd5b61277a836127748685612815565b9061286e565b949350505050565b4690565b6000826127cd576040805162461bcd60e51b815260206004820152601060248201526f6469766973696f6e206279207a65726f60801b604482015290519081900360640190fd5b8115806127d8575083155b156127e557506000611bc5565b600083806127ef57fe5b85840990506127fe8584612815565b61280a826103e8612815565b101595945050505050565b6000826128245750600061172f565b8282028284828161283157fe5b0414611bc55760405162461bcd60e51b81526004018080602001828103825260218152602001806135736021913960400191505060405180910390fd5b60008082116128c4576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816128cd57fe5b049392505050565b60408051808201909152600081526060602082015290565b604051806060016040528060608152602001606081526020016000151581525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b8035610c3a81613462565b600082601f830112612976578081fd5b8151602067ffffffffffffffff8083111561298d57fe5b61299a82838502016133f0565b838152828101908684016040808702890186018a10156129b8578788fd5b875b87811015612a255781838c0312156129d0578889fd5b815182810181811088821117156129e357fe5b835283516129f081613462565b8152838801516bffffffffffffffffffffffff81168114612a0f578a8bfd5b81890152855293860193918101916001016129ba565b50919998505050505050505050565b8035610c3a81613477565b600082601f830112612a4f578081fd5b8135612a62612a5d82613414565b6133f0565b818152846020838601011115612a76578283fd5b816020850160208301379081016020019190915292915050565b60006040808385031215612aa2578182fd5b805181810167ffffffffffffffff8282108183111715612abe57fe5b818452829450853581811115612ad357600080fd5b8601808803851315612ae457600080fd5b608084018381108382111715612af657fe5b909452833593612b0585613477565b93825260208401359381851115612b1b57600080fd5b612b2788868301612a3f565b60608501525050815260209384013593019290925292915050565b6000610120808385031215612b55578182fd5b612b5e816133f0565b915050612b6a8261295b565b8152602082013567ffffffffffffffff80821115612b8757600080fd5b612b9385838601612a90565b6020840152612ba46040850161295b565b60408401526060840135915080821115612bbd57600080fd5b612bc985838601612a90565b60608401526080840135608084015260a084013560a084015260c084013560c0840152612bf860e08501612a34565b60e084015261010091508184013581811115612c1357600080fd5b612c1f86828701612a3f565b8385015250505092915050565b600060208284031215612c3d578081fd5b8135611bc581613462565b600060208284031215612c59578081fd5b8151611bc581613462565b60008060408385031215612c76578081fd5b8251612c8181613462565b6020939093015192949293505050565b600060208284031215612ca2578081fd5b5035919050565b60008060408385031215612cbb578182fd5b8235612cc681613477565b91506020830135612cd681613462565b809150509250929050565b60008060408385031215612cf3578182fd5b8235612cc681613462565b60006020808385031215612d10578182fd5b825167ffffffffffffffff80821115612d27578384fd5b9084019060408287031215612d3a578384fd5b604051604081018181108382111715612d4f57fe5b6040528251612d5d81613477565b81528284015182811115612d6f578586fd5b80840193505086601f840112612d83578485fd5b82519150612d93612a5d83613414565b8281528785848601011115612da6578586fd5b612db583868301878701613436565b938101939093525090949350505050565b600060208284031215612dd7578081fd5b815167ffffffffffffffff80821115612dee578283fd5b9083019060408286031215612e01578283fd5b604051604081018181108382111715612e1657fe5b604052825182811115612e27578485fd5b612e3387828601612966565b825250602083015182811115612e47578485fd5b612e5387828601612966565b60208301525095945050505050565b600060208284031215612e73578081fd5b815167ffffffffffffffff80821115612e8a578283fd5b9083019060608286031215612e9d578283fd5b604051606081018181108382111715612eb257fe5b604052825182811115612ec3578485fd5b612ecf87828601612966565b825250602083015182811115612ee3578485fd5b612eef87828601612966565b602083015250604083015192508215158314612f09578384fd5b6040810192909252509392505050565b600060208284031215612f2a578081fd5b813567ffffffffffffffff811115612f40578182fd5b61277a84828501612b42565b60008060008060808587031215612f61578182fd5b843567ffffffffffffffff80821115612f78578384fd5b612f8488838901612b42565b95506020870135915080821115612f99578384fd5b612fa588838901612a3f565b94506040870135915080821115612fba578384fd5b612fc688838901612b42565b93506060870135915080821115612fdb578283fd5b50612fe887828801612a3f565b91505092959194509250565b600063ffffffff60e01b82511683526020820151604060208501528051806040860152613028816060870160208501613436565b601f01601f1916939093016060019392505050565b60008151604084526130526040850182612ff4565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b8481526001600160a01b03841660208201526080604082018190526000906130a490830185612ff4565b82810360608401526130b68185612ff4565b979650505050505050565b888152602081018890526001600160a01b038781166040830152861660608201526080810185905260a0810184905261010060c0820181905260009061310983820186612ff4565b905082810360e0840152611b5c8185612ff4565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60208082526017908201527f6e6f7420666f756e64204941737365744d617463686572000000000000000000604082015260600190565b6020808252601490820152730c081cd85b1d0818d85b89dd081899481d5cd95960621b604082015260600190565b60208082526024908201527f72696768744f726465722e74616b657220766572696669636174696f6e2066616040820152631a5b195960e21b606082015260800190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b6020808252600f908201526e1b9bdd1a1a5b99c81d1bc8199a5b1b608a1b604082015260600190565b6020808252601290820152710c2e6e6cae8e640c8dedc4ee840dac2e8c6d60731b604082015260600190565b60208082526023908201527f6c6566744f726465722e74616b657220766572696669636174696f6e206661696040820152621b195960ea1b606082015260800190565b6020808252600e908201526d0dcdee840cadcdeeaced040cae8d60931b604082015260600190565b6020808252600b908201526a3737ba10309036b0b5b2b960a91b604082015260600190565b6000604082526133576040830185612ff4565b82810360208401526122508185612ff4565b60006060825261337c606083018661303d565b6001600160a01b0394851660208401529290931660409091015292915050565b600060a082526133af60a083018861303d565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b90815260200190565b60405181810167ffffffffffffffff8111828210171561340c57fe5b604052919050565b600067ffffffffffffffff82111561342857fe5b50601f01601f191660200190565b60005b83811015613451578181015183820152602001613439565b8381111561065e5750506000910152565b6001600160a01b038116811461085957600080fd5b6001600160e01b03198116811461085957600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345434453413a20696e76616c6964207369676e6174757265202773272076616c75656f72646572207369676e617475726520766572696669636174696f6e206572726f72636f6e7472616374206f72646572207369676e617475726520766572696669636174696f6e206572726f72496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445434453413a20696e76616c6964207369676e6174757265202776272076616c7565536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220fa84650dba4076e2da0143697e6e9a3dd1df105cf8f3244ec26488bf4e26a92164736f6c63430007060033";

export class ExchangeSimpleV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExchangeSimpleV2> {
    return super.deploy(overrides || {}) as Promise<ExchangeSimpleV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExchangeSimpleV2 {
    return super.attach(address) as ExchangeSimpleV2;
  }
  connect(signer: Signer): ExchangeSimpleV2__factory {
    return super.connect(signer) as ExchangeSimpleV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeSimpleV2Interface {
    return new utils.Interface(_abi) as ExchangeSimpleV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExchangeSimpleV2 {
    return new Contract(address, _abi, signerOrProvider) as ExchangeSimpleV2;
  }
}
