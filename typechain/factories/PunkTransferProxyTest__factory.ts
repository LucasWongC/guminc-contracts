/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PunkTransferProxyTest,
  PunkTransferProxyTestInterface,
} from "../PunkTransferProxyTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bc4806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100a75780639870d7fe146100c5578063ac8a584a146100d8578063f2fde38b146100eb5761007d565b80632ff26a0a1461008257806354bc0cf11461008c578063715018a61461009f575b600080fd5b61008a6100fe565b005b61008a61009a366004610936565b6101b0565b61008a61034e565b6100af6103fa565b6040516100bc9190610a7c565b60405180910390f35b61008a6100d33660046108ca565b610409565b61008a6100e63660046108ca565b61048f565b61008a6100f93660046108ca565b610512565b600054610100900460ff16806101175750610117610615565b80610125575060005460ff16155b6101605760405162461bcd60e51b815260040180806020018281038252602e815260200180610b41602e913960400191505060405180910390fd5b600054610100900460ff1615801561018b576000805460ff1961ff0019909116610100171660011790555b610193610626565b61019b6106f1565b80156101ad576000805461ff00191690555b50565b6000808460000151602001518060200190518101906101cf9190610909565b604051630b02f02d60e31b8152919350915082906001600160a01b038087169190831690635817816890610207908690600401610ad8565b602060405180830381600087803b15801561022157600080fd5b505af1158015610235573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025991906108ed565b6001600160a01b0316146102885760405162461bcd60e51b815260040161027f90610aa9565b60405180910390fd5b60405163104c9fd360e31b81526001600160a01b03821690638264fe98906102b4908590600401610ad8565b600060405180830381600087803b1580156102ce57600080fd5b505af11580156102e2573d6000803e3d6000fd5b50506040516322dca8bb60e21b81526001600160a01b0384169250638b72a2ec91506103149087908690600401610a90565b600060405180830381600087803b15801561032e57600080fd5b505af1158015610342573d6000803e3d6000fd5b50505050505050505050565b6103566107ea565b6001600160a01b03166103676103fa565b6001600160a01b0316146103b0576040805162461bcd60e51b81526020600482018190526024820152600080516020610b6f833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b6104116107ea565b6001600160a01b03166104226103fa565b6001600160a01b03161461046b576040805162461bcd60e51b81526020600482018190526024820152600080516020610b6f833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b6104976107ea565b6001600160a01b03166104a86103fa565b6001600160a01b0316146104f1576040805162461bcd60e51b81526020600482018190526024820152600080516020610b6f833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b61051a6107ea565b6001600160a01b031661052b6103fa565b6001600160a01b031614610574576040805162461bcd60e51b81526020600482018190526024820152600080516020610b6f833981519152604482015290519081900360640190fd5b6001600160a01b0381166105b95760405162461bcd60e51b8152600401808060200182810382526026815260200180610b1b6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6000610620306107ee565b15905090565b600054610100900460ff168061063f575061063f610615565b8061064d575060005460ff16155b6106885760405162461bcd60e51b815260040180806020018281038252602e815260200180610b41602e913960400191505060405180910390fd5b600054610100900460ff161580156106b3576000805460ff1961ff0019909116610100171660011790555b61019b6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e65640000008152506107f8565b600054610100900460ff168061070a575061070a610615565b80610718575060005460ff16155b6107535760405162461bcd60e51b815260040180806020018281038252602e815260200180610b41602e913960400191505060405180910390fd5b600054610100900460ff1615801561077e576000805460ff1961ff0019909116610100171660011790555b60006107886107ea565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101ad576000805461ff001916905550565b3390565b803b15155b919050565b6101ad816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561083c578181015183820152602001610824565b50505050905090810190601f1680156108695780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052925061089e915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356107f381610b05565b6000602082840312156108db578081fd5b81356108e681610b05565b9392505050565b6000602082840312156108fe578081fd5b81516108e681610b05565b6000806040838503121561091b578081fd5b825161092681610b05565b6020939093015192949293505050565b60008060006060848603121561094a578081fd5b833567ffffffffffffffff80821115610961578283fd5b81860191506040808389031215610976578384fd5b8051818101818110848211171561098957fe5b80835284358481111561099a578687fd5b8501808b038413156109aa578687fd5b6080830182811086821117156109bc57fe5b845280356001600160e01b0319811681146109d5578788fd5b8252602081810135868111156109e9578889fd5b8083019250508b601f8301126109fd578788fd5b813586811115610a0957fe5b610a1b601f8201601f19168301610ae1565b96508087528c82828501011115610a30578889fd5b808284018389013788828289010152508560608501528284528087013581850152839950610a5f818c016108bf565b985050505050610a708188016108bf565b93505050509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60208082526015908201527429b2b63632b9103737ba10383ab7359037bbb732b960591b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610afd57fe5b604052919050565b6001600160a01b03811681146101ad57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a2646970667358221220eee1e237aa5634b7111f7f93f72c28aa43d96b41dadefc12d8865f08e594759b64736f6c63430007060033";

export class PunkTransferProxyTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PunkTransferProxyTest> {
    return super.deploy(overrides || {}) as Promise<PunkTransferProxyTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PunkTransferProxyTest {
    return super.attach(address) as PunkTransferProxyTest;
  }
  connect(signer: Signer): PunkTransferProxyTest__factory {
    return super.connect(signer) as PunkTransferProxyTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PunkTransferProxyTestInterface {
    return new utils.Interface(_abi) as PunkTransferProxyTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PunkTransferProxyTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PunkTransferProxyTest;
  }
}
