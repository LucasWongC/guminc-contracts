/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TransferExecutorTest,
  TransferExecutorTestInterface,
} from "../TransferExecutorTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
    ],
    name: "__TransferExecutorTest_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferTest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f18806100206000396000f3fe6080604052600436106100555760003560e01c80630dca75861461005a5780630f16ea071461006f57806330c642f11461008f578063715018a6146100af5780638da5cb5b146100c4578063f2fde38b146100ef575b600080fd5b61006d610068366004610b65565b61010f565b005b34801561007b57600080fd5b5061006d61008a366004610b48565b61012a565b34801561009b57600080fd5b5061006d6100aa366004610b12565b6101df565b3480156100bb57600080fd5b5061006d6102c1565b3480156100d057600080fd5b506100d961037f565b6040516100e69190610c42565b60405180910390f35b3480156100fb57600080fd5b5061006d61010a366004610aa6565b61038e565b61012561011b84610d91565b83836000806104a3565b505050565b600054610100900460ff16806101435750610143610833565b80610151575060005460ff16155b61018c5760405162461bcd60e51b815260040180806020018281038252602e815260200180610eb5602e913960400191505060405180910390fd5b600054610100900460ff161580156101b7576000805460ff1961ff0019909116610100171660011790555b6101bf610844565b6101c9838361093e565b8015610125576000805461ff0019169055505050565b6101e76109e8565b6001600160a01b03166101f861037f565b6001600160a01b031614610253576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160e01b031982166000818152606560205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c3153593906102b5908490610c42565b60405180910390a25050565b6102c96109e8565b6001600160a01b03166102da61037f565b6001600160a01b031614610335576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b6103966109e8565b6001600160a01b03166103a761037f565b6001600160a01b031614610402576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104475760405162461bcd60e51b8152600401808060200182810382526026815260200180610e8f6026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b8451516001600160e01b0319166355575f5d60e11b14156104dc5760208501516104d7906001600160a01b038516906109ec565b6107ed565b8451516001600160e01b0319166322ba176160e21b14156105ba5760008560000151602001518060200190518101906105159190610ac9565b6322ba176160e21b600052606560209081527fa3a54a403e35239dc7eb7732aefb69511f04db6442fdec4991c5536d935f18a0549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916105829185918a918a9190600401610c99565b600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b50505050506107ed565b8451516001600160e01b0319166339d690a360e11b14156106c3576000808660000151602001518060200190518101906105f49190610ae5565b9150915086602001516001146106255760405162461bcd60e51b815260040161061c90610cc3565b60405180910390fd5b6339d690a360e11b60005260656020527f56d09be51b6584e4bba75aba19b0e5d87280164030a68decabd019180bea2e0354604051637b84dc8360e11b81526001600160a01b039091169063f709b9069061068a9085908a908a908790600401610c99565b600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b5050505050506107ed565b8451516001600160e01b03191663025ceed960e61b141561076c576000808660000151602001518060200190518101906106fd9190610ae5565b63025ceed960e61b600052606560209081527fb4f17b66c3cfc5778c328b9d5047d8291f97b59b22f4919f5f986ad43451df9e54908a0151604051639c1c2ee960e01b81529395509193506001600160a01b031691639c1c2ee99161068a9186918b918b918891600401610c56565b8451516001600160e01b031916600090815260656020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf1906107ba90889088908890600401610cef565b600060405180830381600087803b1580156107d457600080fd5b505af11580156107e8573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051610824959493929190610d22565b60405180910390a15050505050565b600061083e30610a84565b15905090565b600054610100900460ff168061085d575061085d610833565b8061086b575060005460ff16155b6108a65760405162461bcd60e51b815260040180806020018281038252602e815260200180610eb5602e913960400191505060405180910390fd5b600054610100900460ff161580156108d1576000805460ff1961ff0019909116610100171660011790555b60006108db6109e8565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350801561093b576000805461ff00191690555b50565b60656020527fa3a54a403e35239dc7eb7732aefb69511f04db6442fdec4991c5536d935f18a080546001600160a01b039283166001600160a01b0319918216179091557f56d09be51b6584e4bba75aba19b0e5d87280164030a68decabd019180bea2e03805493909216928116831790915563025ceed960e61b6000527fb4f17b66c3cfc5778c328b9d5047d8291f97b59b22f4919f5f986ad43451df9e80549091169091179055565b3390565b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114610a37576040519150601f19603f3d011682016040523d82523d6000602084013e610a3c565b606091505b5050905080610125576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b803b15155b919050565b80356001600160e01b031981168114610a8957600080fd5b600060208284031215610ab7578081fd5b8135610ac281610e79565b9392505050565b600060208284031215610ada578081fd5b8151610ac281610e79565b60008060408385031215610af7578081fd5b8251610b0281610e79565b6020939093015192949293505050565b60008060408385031215610b24578182fd5b610b2d83610a8e565b91506020830135610b3d81610e79565b809150509250929050565b60008060408385031215610b5a578182fd5b8235610b2d81610e79565b600080600060608486031215610b79578081fd5b833567ffffffffffffffff811115610b8f578182fd5b840160408187031215610ba0578182fd5b92506020840135610bb081610e79565b91506040840135610bc081610e79565b809150509250925092565b600081516040845263ffffffff60e01b81511660408501526020808201519150604060608601528151806080870152835b81811015610c185783810183015187820160a001528201610bfc565b81811115610c29578460a083890101525b5093810151908501525050601f01601f19160160a00190565b6001600160a01b0391909116815260200190565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b600060608252610d026060830186610bcb565b6001600160a01b0394851660208401529290931660409091015292915050565b600060a08252610d3560a0830188610bcb565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b60405181810167ffffffffffffffff81118282101715610d8957fe5b604052919050565b60006040808336031215610da3578182fd5b805181810167ffffffffffffffff8282108183111715610dbf57fe5b818452853581811115610dd0578586fd5b860136819003851315610de1578586fd5b608084018381108382111715610df357fe5b8552610dfe81610a8e565b8352602094508481013582811115610e14578687fd5b0136601f820112610e23578586fd5b803582811115610e2f57fe5b610e41601f8201601f19168701610d6d565b92508083523686828401011115610e56578687fd5b808683018785013782018501959095526060830152815292810135908301525090565b6001600160a01b038116811461093b57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564a2646970667358221220a8eac697107810b2376ab02a530f224fc278833001e160ce09a23179db77cbb064736f6c63430007060033";

export class TransferExecutorTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TransferExecutorTest> {
    return super.deploy(overrides || {}) as Promise<TransferExecutorTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TransferExecutorTest {
    return super.attach(address) as TransferExecutorTest;
  }
  connect(signer: Signer): TransferExecutorTest__factory {
    return super.connect(signer) as TransferExecutorTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferExecutorTestInterface {
    return new utils.Interface(_abi) as TransferExecutorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferExecutorTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferExecutorTest;
  }
}
