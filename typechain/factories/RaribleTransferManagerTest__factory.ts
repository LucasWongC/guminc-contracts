/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RaribleTransferManagerTest,
  RaribleTransferManagerTestInterface,
} from "../RaribleTransferManagerTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "ProxyChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes4",
                name: "assetClass",
                type: "bytes4",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct LibAsset.AssetType",
            name: "assetType",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct LibAsset.Asset",
        name: "asset",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferDirection",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "transferType",
        type: "bytes4",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract INftTransferProxy",
        name: "_transferProxy",
        type: "address",
      },
      {
        internalType: "contract IERC20TransferProxy",
        name: "_erc20TransferProxy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newCommunityWallet",
        type: "address",
      },
      {
        internalType: "contract IRoyaltiesProvider",
        name: "newRoyaltiesProvider",
        type: "address",
      },
    ],
    name: "__TransferManager_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "makeMatch",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "takeMatch",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "leftValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rightValue",
            type: "uint256",
          },
        ],
        internalType: "struct LibFill.FillResult",
        name: "fill",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "leftOrder",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "makeAsset",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes4",
                    name: "assetClass",
                    type: "bytes4",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct LibAsset.AssetType",
                name: "assetType",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct LibAsset.Asset",
            name: "takeAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "bytes4",
            name: "dataType",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibOrder.Order",
        name: "rightOrder",
        type: "tuple",
      },
    ],
    name: "checkDoTransfers",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "payouts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "originFees",
            type: "tuple[]",
          },
        ],
        internalType: "struct LibOrderDataV1.DataV1",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "payouts",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address payable",
                name: "account",
                type: "address",
              },
              {
                internalType: "uint96",
                name: "value",
                type: "uint96",
              },
            ],
            internalType: "struct LibPart.Part[]",
            name: "originFees",
            type: "tuple[]",
          },
          {
            internalType: "bool",
            name: "isMakeFill",
            type: "bool",
          },
        ],
        internalType: "struct LibOrderDataV2.DataV2",
        name: "data",
        type: "tuple",
      },
    ],
    name: "encodeV2",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceivers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltiesRegistry",
    outputs: [
      {
        internalType: "contract IRoyaltiesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDefaultFeeReceiver",
        type: "address",
      },
    ],
    name: "setDefaultFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newProtocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRoyaltiesProvider",
        name: "newRoyaltiesRegistry",
        type: "address",
      },
    ],
    name: "setRoyaltiesRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "assetType",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "proxy",
        type: "address",
      },
    ],
    name: "setTransferProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612fff806100206000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063a5e633a111610059578063a5e633a114610271578063b0e21e8a14610284578063e66db25e146102a6578063f2fde38b146102c6576100f3565b80638da5cb5b146101ef5780639a3c40fb146102045780639c3696c6146102315780639d461f5114610251576100f3565b80633be89922116100c65780633be89922146101855780636d8f0694146101a5578063715018a6146101ba578063787dce3d146101cf576100f3565b806302097ab1146100f85780631cdfe3d81461012e57806330c642f1146101505780633abf6fd414610170575b600080fd5b34801561010457600080fd5b5061011861011336600461247b565b6102e6565b6040516101259190612c0d565b60405180910390f35b34801561013a57600080fd5b5061014e61014936600461247b565b610301565b005b34801561015c57600080fd5b5061014e61016b366004612742565b610385565b34801561017c57600080fd5b50610118610455565b34801561019157600080fd5b5061014e6101a036600461247b565b610464565b3480156101b157600080fd5b506101186104e8565b3480156101c657600080fd5b5061014e6104f7565b3480156101db57600080fd5b5061014e6101ea366004612b2b565b6105a3565b3480156101fb57600080fd5b5061011861060a565b34801561021057600080fd5b5061022461021f3660046128b0565b610619565b6040516101259190612c3a565b34801561023d57600080fd5b5061014e61024c36600461275d565b610643565b34801561025d57600080fd5b5061022461026c3660046129d7565b610717565b61014e61027f3660046127c4565b61072a565b34801561029057600080fd5b50610299610752565b6040516101259190612e66565b3480156102b257600080fd5b5061014e6102c13660046126d0565b610758565b3480156102d257600080fd5b5061014e6102e136600461247b565b6107e8565b6068602052600090815260409020546001600160a01b031681565b6103096108eb565b6001600160a01b031661031a61060a565b6001600160a01b031614610363576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b606780546001600160a01b0319166001600160a01b0392909216919091179055565b61038d6108eb565b6001600160a01b031661039e61060a565b6001600160a01b0316146103e7576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b6001600160e01b031982166000818152609760205260409081902080546001600160a01b0319166001600160a01b038516179055517f4b5aced933c0c9a88aeac3f0b3b72c5aaf75df8ebaf53225773248c4c315359390610449908490612c0d565b60405180910390a25050565b6067546001600160a01b031681565b61046c6108eb565b6001600160a01b031661047d61060a565b6001600160a01b0316146104c6576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b606680546001600160a01b0319166001600160a01b0392909216919091179055565b6066546001600160a01b031681565b6104ff6108eb565b6001600160a01b031661051061060a565b6001600160a01b031614610559576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6105ab6108eb565b6001600160a01b03166105bc61060a565b6001600160a01b031614610605576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b606555565b6033546001600160a01b031690565b60608160405160200161062c9190612dd2565b60405160208183030381529060405290505b919050565b600054610100900460ff168061065c575061065c6108ef565b8061066a575060005460ff16155b6106a55760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff161580156106d0576000805460ff1961ff0019909116610100171660011790555b6106d8610900565b6106e06109e0565b6106ea8686610ad9565b6106f5848484610b83565b6106fd610c5d565b801561070f576000805461ff00191690555b505050505050565b60608160405160200161062c9190612e14565b610749858585858561073b88610d2d565b61074488610d2d565b610e31565b50505050505050565b60655481565b6107606108eb565b6001600160a01b031661077161060a565b6001600160a01b0316146107ba576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b6001600160a01b03918216600090815260686020526040902080546001600160a01b03191691909216179055565b6107f06108eb565b6001600160a01b031661080161060a565b6001600160a01b03161461084a576040805162461bcd60e51b81526020600482018190526024820152600080516020612faa833981519152604482015290519081900360640190fd5b6001600160a01b03811661088f5760405162461bcd60e51b8152600401808060200182810382526026815260200180612f356026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b60006108fa30610fd9565b15905090565b600054610100900460ff168061091957506109196108ef565b80610927575060005460ff16155b6109625760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff1615801561098d576000805460ff1961ff0019909116610100171660011790555b6109cb6040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e6564000000815250610fdf565b80156109dd576000805461ff00191690555b50565b600054610100900460ff16806109f957506109f96108ef565b80610a07575060005460ff16155b610a425760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff16158015610a6d576000805460ff1961ff0019909116610100171660011790555b6000610a776108eb565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156109dd576000805461ff001916905550565b60976020527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc080546001600160a01b039283166001600160a01b0319918216179091557f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d5805493909216928116831790915563025ceed960e61b6000527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f80549091169091179055565b600054610100900460ff1680610b9c5750610b9c6108ef565b80610baa575060005460ff16155b610be55760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff16158015610c10576000805460ff1961ff0019909116610100171660011790555b6065849055606780546001600160a01b038086166001600160a01b03199283161790925560668054928516929091169190911790558015610c57576000805461ff00191690555b50505050565b600054610100900460ff1680610c765750610c766108ef565b80610c84575060005460ff16155b610cbf5760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff16158015610cea576000805460ff1961ff0019909116610100171660011790555b6109cb6040518060400160405280600881526020016745786368616e676560c01b815250604051806040016040528060018152602001601960f91b815250611085565b610d35611fdd565b60e08201516001600160e01b031916632611a13360e11b1415610d7d576000610d62836101000151611146565b80518352602090810151908301525060006040820152610e18565b60e08201516001600160e01b0319166323d235ef60e01b1415610daf57610da8826101000151611168565b9050610e18565b60e08201516001600160e01b03199081161415610dcb57610e18565b6040805162461bcd60e51b815260206004820152601760248201527f556e6b6e6f776e204f7264657220646174612074797065000000000000000000604482015290519081900360640190fd5b80515161063e578151610e2a90611184565b8152919050565b6000806000610e488a600001518a6000015161121f565b885160208a0151909450925090506001816002811115610e6457fe5b1415610edd5787518751610e9d919087878e8e7f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c96112f0565b9250610ed8898960200151886000015188600001517fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b6113b3565b610fcc565b6002816002811115610eeb57fe5b1415610f5f57610f288860200151876000015186888d8f7fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b6112f0565b885188518651929450610ed8928d9291907f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c96113b3565b875187518551610f93928d9290917f1a0388dd7519a093630516a672419a2562e0e74deb98af068657dc265f0164c96113b3565b610fcc898960200151886000015188600001517fb45a3ba14423c8f1b71cc094845ab56b5294dbe8d8e3ba53f3cdb63d59a4044b6113b3565b5097509795505050505050565b3b151590565b6109dd816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561102357818101518382015260200161100b565b50505050905090810190601f1680156110505780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250611561915050565b600054610100900460ff168061109e575061109e6108ef565b806110ac575060005460ff16155b6110e75760405162461bcd60e51b815260040180806020018281038252602e815260200180612f5b602e913960400191505060405180910390fd5b600054610100900460ff16158015611112576000805460ff1961ff0019909116610100171660011790555b825160208085019190912083519184019190912060c99190915560ca558015611141576000805461ff00191690555b505050565b61114e612000565b81806020019051810190611162919061294b565b92915050565b611170611fdd565b818060200190518101906111629190612a89565b60408051600180825281830190925260609160009190816020015b6111a761201a565b81526020019060019003908161119f57905050905082816000815181106111ca57fe5b6020026020010151600001906001600160a01b031690816001600160a01b031681525050612710816000815181106111fe57fe5b6020908102919091018101516001600160601b039092169101529050919050565b60006001600160e01b031983166355575f5d60e11b141561124257506001611162565b6001600160e01b031982166355575f5d60e11b141561126357506002611162565b6001600160e01b031983166322ba176160e21b141561128457506001611162565b6001600160e01b031982166322ba176160e21b14156112a557506002611162565b6001600160e01b0319831663025ceed960e61b14156112c657506001611162565b6001600160e01b0319821663025ceed960e61b14156112e757506002611162565b50600092915050565b6000611303886065548860200151611582565b90506000611314828a8a88876115f5565b90506113248585838c8c886116f0565b905061135985828b8a602001518c887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf955611763565b508091505061139185828b89602001518c887fdfdfdaf4cc275341b6776a7ee23b953990b8d991717449077287da70f32cf955611763565b50809150506113a785828a8960000151876113b3565b50979650505050505050565b600084815b60018551038110156114a35760006113f98683815181106113d557fe5b6020026020010151602001516001600160601b03168961182490919063ffffffff16565b905061142e86838151811061140a57fe5b6020026020010151602001516001600160601b03168561184390919063ffffffff16565b9350801561149a57611440838261189d565b925061149a60405180604001604052808b8152602001838152508888858151811061146757fe5b602002602001015160000151887fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e6118fa565b506001016113b8565b506000846001865103815181106114b657fe5b602002602001015190506114e081602001516001600160601b03168461184390919063ffffffff16565b9250826127101461150c5760405162461bcd60e51b815260040161150390612d1d565b60405180910390fd5b81156115575761155760405180604001604052808a815260200184815250878360000151877fa10bb5b2060a412d05113732875a5431ca23453eb93f797e0ffcb5b40e5f2c3e6118fa565b5050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006115986115918585611824565b8590611843565b905060005b82518110156115ed576115e36115dc8483815181106115b857fe5b6020026020010151602001516001600160601b03168761182490919063ffffffff16565b8390611843565b915060010161159d565b509392505050565b600080600061161a88886116156002606554611c8190919063ffffffff16565b611cda565b909250905080156116e55784516000906001600160e01b0319166322ba176160e21b141561166157856020015180602001905181019061165a9190612497565b905061169a565b85516001600160e01b03191663025ceed960e61b141561169a576000866020015180602001905181019061169591906126a3565b509150505b6116e3604051806040016040528088815260200184815250886116bc84611cfc565b887ff87e69cb514f255f3d32f9d90f25160a10d0cdefe6618a6406db334d4450595c6118fa565b505b509695505050505050565b6000806116fc87611d39565b90506000806117308a8989868a8a7fb3c5c697ec0b511b76d12f6293e6ee827b1e1df79ac7c64d0466d945904893d7611763565b915091506113888111156117565760405162461bcd60e51b815260040161150390612cba565b5098975050505050505050565b856000805b8651811015610fcc576117a487828151811061178057fe5b6020026020010151602001516001600160601b03168361184390919063ffffffff16565b91506000806117d4858b8b86815181106117ba57fe5b6020026020010151602001516001600160601b0316611cda565b9095508592509050801561181a5761181a60405180604001604052808e815260200183815250898b868151811061180757fe5b6020026020010151600001518a8a6118fa565b5050600101611768565b600061183c6127106118368585611c81565b90611eb1565b9392505050565b60008282018381101561183c576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000828211156118f4576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b8451516001600160e01b0319166355575f5d60e11b141561193357602085015161192e906001600160a01b03851690611f18565b611c3b565b8451516001600160e01b0319166322ba176160e21b1415611a1157600085600001516020015180602001905181019061196c9190612497565b6322ba176160e21b600052609760209081527f4532fa16f071d6234e30e1a1e69b9806f04095edf37a1ca7a25c8d6af7861cc0549088015160405163776062c360e01b81529293506001600160a01b039091169163776062c3916119d99185918a918a9190600401612c90565b600060405180830381600087803b1580156119f357600080fd5b505af1158015611a07573d6000803e3d6000fd5b5050505050611c3b565b8451516001600160e01b0319166339d690a360e11b1415611b1157600080866000015160200151806020019051810190611a4b91906126a3565b915091508660200151600114611a735760405162461bcd60e51b815260040161150390612cf1565b6339d690a360e11b60005260976020527f30a684095c937b5aa064dcf94f9903a7d808e3efb22d8389dbd43080ad4ed3d554604051637b84dc8360e11b81526001600160a01b039091169063f709b90690611ad89085908a908a908790600401612c90565b600060405180830381600087803b158015611af257600080fd5b505af1158015611b06573d6000803e3d6000fd5b505050505050611c3b565b8451516001600160e01b03191663025ceed960e61b1415611bba57600080866000015160200151806020019051810190611b4b91906126a3565b63025ceed960e61b600052609760209081527f4b5822151ea34b7c8d9e37c3e466bcecb631efe6a9f26a4a4054110a93dd316f54908a0151604051639c1c2ee960e01b81529395509193506001600160a01b031691639c1c2ee991611ad89186918b918b918891600401612c4d565b8451516001600160e01b031916600090815260976020526040908190205490516354bc0cf160e01b81526001600160a01b03909116906354bc0cf190611c0890889088908890600401612d54565b600060405180830381600087803b158015611c2257600080fd5b505af1158015611c36573d6000803e3d6000fd5b505050505b7fcae9d16f553e92058883de29cb3135dbc0c1e31fd7eace79fef1d80577fe482e8585858585604051611c72959493929190612d87565b60405180910390a15050505050565b600082611c9057506000611162565b82820282848281611c9d57fe5b041461183c5760405162461bcd60e51b8152600401808060200182810382526021815260200180612f896021913960400191505060405180910390fd5b600080611cf085611ceb8686611824565b611fb0565b91509150935093915050565b6001600160a01b038082166000908152606860205260408120549091168015611d2657905061063e565b50506067546001600160a01b0316919050565b80516060906001600160e01b03191663025ceed960e61b1480611d6d575081516001600160e01b0319166339d690a360e11b145b15611e22576000808360200151806020019051810190611d8d91906126a3565b606654604051634e53ee3d60e11b81529294509092506001600160a01b031690639ca7dc7a90611dc39085908590600401612c21565b600060405180830381600087803b158015611ddd57600080fd5b505af1158015611df1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611e199190810190612708565b9250505061063e565b81516001600160e01b03191662737ea960e61b1415611e65576000808360200151806020019051810190611e5691906124b3565b60800151935061063e92505050565b81516001600160e01b03191663d8f960c160e01b1415611ea9576000808360200151806020019051810190611e9a91906125b0565b60600151935061063e92505050565b506060919050565b6000808211611f07576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381611f1057fe5b049392505050565b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114611f63576040519150601f19603f3d011682016040523d82523d6000602084013e611f68565b606091505b5050905080611141576040805162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015290519081900360640190fd5b60008082841115611fcf57611fc5848461189d565b9150829050611fd6565b5060009050825b9250929050565b604051806060016040528060608152602001606081526020016000151581525090565b604051806040016040528060608152602001606081525090565b604080518082019091526000808252602082015290565b600061204461203f84612eaf565b612e6f565b905082815283838301111561205857600080fd5b61183c836020830184612ed0565b803561063e81612efc565b600082601f830112612081578081fd5b8151602061209161203f83612e92565b82815281810190858301855b858110156120db578151880189603f8201126120b7578788fd5b6120c88a8783015160408401612031565b855250928401929084019060010161209d565b5090979650505050505050565b600082601f8301126120f8578081fd5b8135602061210861203f83612e92565b82815281810190858301604080860288018501891015612126578687fd5b865b8681101561218a5781838b03121561213e578788fd5b81518281018181106001600160401b038211171561215857fe5b8352833561216581612efc565b81528387013561217481612f1f565b8188015285529385019391810191600101612128565b509198975050505050505050565b600082601f8301126121a8578081fd5b815160206121b861203f83612e92565b828152818101908583016040808602880185018910156121d6578687fd5b865b8681101561218a5781838b0312156121ee578788fd5b81518281018181106001600160401b038211171561220857fe5b8352835161221581612efc565b81528387015161222481612f1f565b81880152855293850193918101916001016121d8565b80356001600160e01b03198116811461063e57600080fd5b600082601f830112612262578081fd5b813561227061203f82612eaf565b818152846020838601011115612284578283fd5b816020850160208301379081016020019190915292915050565b600082601f8301126122ae578081fd5b61183c83835160208501612031565b6000604082840312156122ce578081fd5b604051604081016001600160401b0382821081831117156122eb57fe5b816040528293506122fb8561223a565b8352602085013591508082111561231157600080fd5b5061231e85828601612252565b6020830152505092915050565b60006040828403121561233c578081fd5b604051604081016001600160401b03828210818311171561235957fe5b81604052829350843591508082111561237157600080fd5b5061237e858286016122bd565b825250602083013560208201525092915050565b60006101208083850312156123a5578182fd5b6123ae81612e6f565b9150506123ba82612066565b815260208201356001600160401b03808211156123d657600080fd5b6123e28583860161232b565b60208401526123f360408501612066565b6040840152606084013591508082111561240c57600080fd5b6124188583860161232b565b60608401526080840135608084015260a084013560a084015260c084013560c084015261244760e0850161223a565b60e08401526101009150818401358181111561246257600080fd5b61246e86828701612252565b8385015250505092915050565b60006020828403121561248c578081fd5b813561183c81612efc565b6000602082840312156124a8578081fd5b815161183c81612efc565b600080604083850312156124c5578081fd5b82516124d081612efc565b60208401519092506001600160401b03808211156124ec578283fd5b9084019060c082870312156124ff578283fd5b61250960c0612e6f565b8251815260208301518281111561251e578485fd5b61252a8882860161229e565b6020830152506040830151604082015260608301518281111561254b578485fd5b61255788828601612198565b60608301525060808301518281111561256e578485fd5b61257a88828601612198565b60808301525060a083015182811115612591578485fd5b61259d88828601612071565b60a0830152508093505050509250929050565b600080604083850312156125c2578182fd5b82516125cd81612efc565b60208401519092506001600160401b03808211156125e9578283fd5b9084019060a082870312156125fc578283fd5b61260660a0612e6f565b8251815260208301518281111561261b578485fd5b6126278882860161229e565b60208301525060408301518281111561263e578485fd5b61264a88828601612198565b604083015250606083015182811115612661578485fd5b61266d88828601612198565b606083015250608083015182811115612684578485fd5b61269088828601612071565b6080830152508093505050509250929050565b600080604083850312156126b5578182fd5b82516126c081612efc565b6020939093015192949293505050565b600080604083850312156126e2578182fd5b82356126ed81612efc565b915060208301356126fd81612efc565b809150509250929050565b600060208284031215612719578081fd5b81516001600160401b0381111561272e578182fd5b61273a84828501612198565b949350505050565b60008060408385031215612754578182fd5b6126ed8361223a565b600080600080600060a08688031215612774578081fd5b853561277f81612efc565b9450602086013561278f81612efc565b93506040860135925060608601356127a681612efc565b915060808601356127b681612efc565b809150509295509295909350565b600080600080600085870360c08112156127dc578384fd5b86356001600160401b03808211156127f2578586fd5b6127fe8a838b016122bd565b97506020890135915080821115612813578586fd5b61281f8a838b016122bd565b96506040603f1984011215612832578586fd5b6040519250604083019150828210818311171561284b57fe5b604082815289013583526060890135602084015291945060808801359180831115612874578384fd5b6128808a848b01612392565b945060a0890135925080831115612895578384fd5b50506128a388828901612392565b9150509295509295909350565b6000602082840312156128c1578081fd5b81356001600160401b03808211156128d7578283fd5b90830190604082860312156128ea578283fd5b6040516040810181811083821117156128ff57fe5b604052823582811115612910578485fd5b61291c878286016120e8565b825250602083013582811115612930578485fd5b61293c878286016120e8565b60208301525095945050505050565b60006020828403121561295c578081fd5b81516001600160401b0380821115612972578283fd5b9083019060408286031215612985578283fd5b60405160408101818110838211171561299a57fe5b6040528251828111156129ab578485fd5b6129b787828601612198565b8252506020830151828111156129cb578485fd5b61293c87828601612198565b6000602082840312156129e8578081fd5b81356001600160401b03808211156129fe578283fd5b9083019060608286031215612a11578283fd5b604051606081018181108382111715612a2657fe5b604052823582811115612a37578485fd5b612a43878286016120e8565b825250602083013582811115612a57578485fd5b612a63878286016120e8565b60208301525060408301359250612a7983612f11565b6040810192909252509392505050565b600060208284031215612a9a578081fd5b81516001600160401b0380821115612ab0578283fd5b9083019060608286031215612ac3578283fd5b604051606081018181108382111715612ad857fe5b604052825182811115612ae9578485fd5b612af587828601612198565b825250602083015182811115612b09578485fd5b612b1587828601612198565b60208301525060408301519250612a7983612f11565b600060208284031215612b3c578081fd5b5035919050565b6000815180845260208085019450808401835b83811015612b8f57815180516001600160a01b031688528301516001600160601b03168388015260409096019590820190600101612b56565b509495945050505050565b60008151808452612bb2816020860160208601612ed0565b601f01601f19169290920160200192915050565b600081516040845263ffffffff60e01b81511660408501526020810151905060406060850152612bf96080850182612b9a565b602093840151949093019390935250919050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825261183c6020830184612b9a565b6001600160a01b03958616815293851660208501529190931660408301526060820192909252608081019190915260c060a0820181905260009082015260e00190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6020808252601d908201527f526f79616c746965732061726520746f6f206869676820283e35302529000000604082015260600190565b60208082526012908201527132b9319b9918903b30b63ab29032b93937b960711b604082015260600190565b6020808252601e908201527f53756d207061796f75747320427073206e6f7420657175616c20313030250000604082015260600190565b600060608252612d676060830186612bc6565b6001600160a01b0394851660208401529290931660409091015292915050565b600060a08252612d9a60a0830188612bc6565b6001600160a01b0396871660208401529490951660408201526001600160e01b03199283166060820152911660809091015292915050565b600060208252825160406020840152612dee6060840182612b43565b90506020840151601f19848303016040850152612e0b8282612b43565b95945050505050565b600060208252825160606020840152612e306080840182612b43565b90506020840151601f19848303016040850152612e4d8282612b43565b9150506040840151151560608401528091505092915050565b90815260200190565b6040518181016001600160401b0381118282101715612e8a57fe5b604052919050565b60006001600160401b03821115612ea557fe5b5060209081020190565b60006001600160401b03821115612ec257fe5b50601f01601f191660200190565b60005b83811015612eeb578181015183820152602001612ed3565b83811115610c575750506000910152565b6001600160a01b03811681146109dd57600080fd5b80151581146109dd57600080fd5b6001600160601b03811681146109dd57600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212209b42a4a1b0cbe682b93dcbab2acba4abc61b9a85e4dc1a3dc208c7045cb2108764736f6c63430007060033";

export class RaribleTransferManagerTest__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RaribleTransferManagerTest> {
    return super.deploy(overrides || {}) as Promise<RaribleTransferManagerTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RaribleTransferManagerTest {
    return super.attach(address) as RaribleTransferManagerTest;
  }
  connect(signer: Signer): RaribleTransferManagerTest__factory {
    return super.connect(signer) as RaribleTransferManagerTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RaribleTransferManagerTestInterface {
    return new utils.Interface(_abi) as RaribleTransferManagerTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RaribleTransferManagerTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RaribleTransferManagerTest;
  }
}
