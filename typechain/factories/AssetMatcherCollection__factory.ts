/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetMatcherCollection,
  AssetMatcherCollectionInterface,
} from "../AssetMatcherCollection";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "__AssetMatcherCollection_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "__OperatorRole_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "leftAssetType",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "rightAssetType",
        type: "tuple",
      },
    ],
    name: "matchAssets",
    outputs: [
      {
        components: [
          {
            internalType: "bytes4",
            name: "assetClass",
            type: "bytes4",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct LibAsset.AssetType",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ca9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100d05780639870d7fe146100e5578063ac8a584a146100f8578063f2fde38b1461010b57610088565b806324d926941461008d5780632ff26a0a146100975780636d3f7cb01461009f578063715018a6146100c8575b600080fd5b61009561011e565b005b6100956101c8565b6100b26100ad366004610abb565b610265565b6040516100bf9190610b30565b60405180910390f35b610095610405565b6100d86104b1565b6040516100bf9190610b1c565b6100956100f3366004610a4f565b6104c0565b610095610106366004610a4f565b610546565b610095610119366004610a4f565b6105c9565b600054610100900460ff168061013757506101376106cc565b80610145575060005460ff16155b6101805760405162461bcd60e51b815260040180806020018281038252602e815260200180610bfe602e913960400191505060405180910390fd5b600054610100900460ff161580156101ab576000805460ff1961ff0019909116610100171660011790555b6101b36101c8565b80156101c5576000805461ff00191690555b50565b600054610100900460ff16806101e157506101e16106cc565b806101ef575060005460ff16155b61022a5760405162461bcd60e51b815260040180806020018281038252602e815260200180610bfe602e913960400191505060405180910390fd5b600054610100900460ff16158015610255576000805460ff1961ff0019909116610100171660011790555b61025d6106dd565b6101b36107a8565b61026d610972565b606560006102796108a1565b6001600160a01b0316815260208101919091526040016000205460ff166102d15760405162461bcd60e51b8152600401808060200182810382526028815260200180610c4c6028913960400191505060405180910390fd5b81516001600160e01b0319166339d690a360e11b1480610302575081516001600160e01b03191663d8f960c160e01b145b8061031e575081516001600160e01b03191663025ceed960e61b145b80610339575081516001600160e01b03191662737ea960e61b145b80610355575081516001600160e01b031916630f9ae27560e21b145b156103db57600083602001518060200190518101906103749190610a72565b9050600083602001518060200190518101906103909190610a8e565b509050806001600160a01b0316826001600160a01b031614156103d85750506040805180820190915282516001600160e01b03191681526020808401519082015290506103ff565b50505b50604080518082018252600080825282516020818101909452908152918101919091525b92915050565b61040d6108a1565b6001600160a01b031661041e6104b1565b6001600160a01b031614610467576040805162461bcd60e51b81526020600482018190526024820152600080516020610c2c833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b6033546001600160a01b031690565b6104c86108a1565b6001600160a01b03166104d96104b1565b6001600160a01b031614610522576040805162461bcd60e51b81526020600482018190526024820152600080516020610c2c833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19166001179055565b61054e6108a1565b6001600160a01b031661055f6104b1565b6001600160a01b0316146105a8576040805162461bcd60e51b81526020600482018190526024820152600080516020610c2c833981519152604482015290519081900360640190fd5b6001600160a01b03166000908152606560205260409020805460ff19169055565b6105d16108a1565b6001600160a01b03166105e26104b1565b6001600160a01b03161461062b576040805162461bcd60e51b81526020600482018190526024820152600080516020610c2c833981519152604482015290519081900360640190fd5b6001600160a01b0381166106705760405162461bcd60e51b8152600401808060200182810382526026815260200180610bd86026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b60006106d7306108a5565b15905090565b600054610100900460ff16806106f657506106f66106cc565b80610704575060005460ff16155b61073f5760405162461bcd60e51b815260040180806020018281038252602e815260200180610bfe602e913960400191505060405180910390fd5b600054610100900460ff1615801561076a576000805460ff1961ff0019909116610100171660011790555b6101b36040518060400160405280601d81526020017f49276d20696e20636f6e7465787420696e697420756e636861696e65640000008152506108ab565b600054610100900460ff16806107c157506107c16106cc565b806107cf575060005460ff16155b61080a5760405162461bcd60e51b815260040180806020018281038252602e815260200180610bfe602e913960400191505060405180910390fd5b600054610100900460ff16158015610835576000805460ff1961ff0019909116610100171660011790555b600061083f6108a1565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35080156101c5576000805461ff001916905550565b3390565b3b151590565b6101c5816040516024018080602001828103825283818151815260200191508051906020019080838360005b838110156108ef5781810151838201526020016108d7565b50505050905090810190601f16801561091c5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790529250610951915050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60408051808201909152600081526060602082015290565b60006040828403121561099b578081fd5b6040516040810167ffffffffffffffff82821081831117156109b957fe5b816040528293508435915063ffffffff60e01b821682146109d957600080fd5b90825260209084820135818111156109f057600080fd5b8501601f81018713610a0157600080fd5b803582811115610a0d57fe5b610a1f601f8201601f19168501610b9e565b92508083528784828401011115610a3557600080fd5b808483018585013760009083018401525091015292915050565b600060208284031215610a60578081fd5b8135610a6b81610bc2565b9392505050565b600060208284031215610a83578081fd5b8151610a6b81610bc2565b60008060408385031215610aa0578081fd5b8251610aab81610bc2565b6020939093015192949293505050565b60008060408385031215610acd578182fd5b823567ffffffffffffffff80821115610ae4578384fd5b610af08683870161098a565b93506020850135915080821115610b05578283fd5b50610b128582860161098a565b9150509250929050565b6001600160a01b0391909116815260200190565b6000602080835263ffffffff60e01b84511681840152808401516040808501528051806060860152835b81811015610b7657828101840151868201608001528301610b5a565b81811115610b875784608083880101525b50601f01601f191693909301608001949350505050565b60405181810167ffffffffffffffff81118282101715610bba57fe5b604052919050565b6001600160a01b03811681146101c557600080fdfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65724f70657261746f72526f6c653a2063616c6c6572206973206e6f7420746865206f70657261746f72a26469706673582212200fc7cd478e5ad922845c5eaa1d118989f8b913cf3651e3b5402b1bbe172e007864736f6c63430007060033";

export class AssetMatcherCollection__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetMatcherCollection> {
    return super.deploy(overrides || {}) as Promise<AssetMatcherCollection>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssetMatcherCollection {
    return super.attach(address) as AssetMatcherCollection;
  }
  connect(signer: Signer): AssetMatcherCollection__factory {
    return super.connect(signer) as AssetMatcherCollection__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetMatcherCollectionInterface {
    return new utils.Interface(_abi) as AssetMatcherCollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetMatcherCollection {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AssetMatcherCollection;
  }
}
