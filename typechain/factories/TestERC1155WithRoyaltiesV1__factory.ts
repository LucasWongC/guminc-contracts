/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestERC1155WithRoyaltiesV1,
  TestERC1155WithRoyaltiesV1Interface,
} from "../TestERC1155WithRoyaltiesV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "bps",
        type: "uint256[]",
      },
    ],
    name: "SecondarySaleFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getFeeBps",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getFeeRecipients",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "account",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "value",
            type: "uint96",
          },
        ],
        internalType: "struct LibPart.Part[]",
        name: "_fees",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612037806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c80634e1273f4116100715780634e1273f4146101695780638129fc1c1461017c578063a22cb46514610184578063b9c4d9fb14610197578063e985e9c5146101b7578063f242432a146101ca576100b3565b8062fdd58e146100b857806301ffc9a7146100e15780630e89341c146101015780630ebd4c7f146101215780632eb2c2d614610141578063310c787f14610156575b600080fd5b6100cb6100c63660046119c9565b6101dd565b6040516100d89190611cda565b60405180910390f35b6100f46100ef366004611bb7565b61024c565b6040516100d89190611c7c565b61011461010f366004611bdf565b61026b565b6040516100d89190611c87565b61013461012f366004611bdf565b610303565b6040516100d89190611c44565b61015461014f366004611889565b61041b565b005b6101546101643660046119f4565b610719565b610134610177366004611af8565b610744565b610154610827565b610154610192366004611998565b6108d8565b6101aa6101a5366004611bdf565b6109c7565b6040516100d89190611bf7565b6100f46101c5366004611851565b610adb565b6101546101d8366004611932565b610b09565b60006001600160a01b0383166102245760405162461bcd60e51b815260040180806020018281038252602b815260200180611e3f602b913960400191505060405180910390fd5b5060009081526066602090815260408083206001600160a01b03949094168352929052205490565b6001600160e01b03191660009081526034602052604090205460ff1690565b60688054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b50505050509050919050565b600081815260208181526040808320805482518185028101850190935280835260609493849084015b8282101561037b57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b03168183015282526001909201910161032c565b505050509050600081516001600160401b038111801561039a57600080fd5b506040519080825280602002602001820160405280156103c4578160200160208202803683370190505b50905060005b8251811015610413578281815181106103df57fe5b6020026020010151602001516001600160601b031682828151811061040057fe5b60209081029190910101526001016103ca565b509392505050565b815183511461045b5760405162461bcd60e51b8152600401808060200182810382526028815260200180611fb96028913960400191505060405180910390fd5b6001600160a01b0384166104a05760405162461bcd60e51b8152600401808060200182810382526025815260200180611e936025913960400191505060405180910390fd5b6104a8610cd4565b6001600160a01b0316856001600160a01b031614806104ce57506104ce856101c5610cd4565b6105095760405162461bcd60e51b8152600401808060200182810382526032815260200180611eb86032913960400191505060405180910390fd5b6000610513610cd4565b9050610523818787878787610711565b60005b845181101561062957600085828151811061053d57fe5b60200260200101519050600085838151811061055557fe5b602002602001015190506105c2816040518060600160405280602a8152602001611f18602a91396066600086815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054610cd99092919063ffffffff16565b60008381526066602090815260408083206001600160a01b038e811685529252808320939093558a16815220546105f99082610d70565b60009283526066602090815260408085206001600160a01b038c1686529091529092209190915550600101610526565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156106af578181015183820152602001610697565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156106ee5781810151838201526020016106d6565b5050505090500194505050505060405180910390a4610711818787878787610dd1565b505050505050565b61073484848360405180602001604052806000815250611050565b61073e8383611158565b50505050565b606081518351146107865760405162461bcd60e51b8152600401808060200182810382526029815260200180611f906029913960400191505060405180910390fd5b600083516001600160401b038111801561079f57600080fd5b506040519080825280602002602001820160405280156107c9578160200160208202803683370190505b50905060005b8451811015610413576108088582815181106107e757fe5b60200260200101518583815181106107fb57fe5b60200260200101516101dd565b82828151811061081457fe5b60209081029190910101526001016107cf565b600154610100900460ff1680610840575061084061134a565b8061084e575060015460ff16155b6108895760405162461bcd60e51b815260040180806020018281038252602e815260200180611eea602e913960400191505060405180910390fd5b600154610100900460ff161580156108b3576001805460ff1961ff00199091166101001716811790555b6108c3632dde656160e21b61135b565b80156108d5576001805461ff00191690555b50565b816001600160a01b03166108ea610cd4565b6001600160a01b031614156109305760405162461bcd60e51b8152600401808060200182810382526029815260200180611f676029913960400191505060405180910390fd5b806067600061093d610cd4565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610981610cd4565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600081815260208181526040808320805482518185028101850190935280835260609493849084015b82821015610a3f57600084815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b0316818301528252600190920191016109f0565b505050509050600081516001600160401b0381118015610a5e57600080fd5b50604051908082528060200260200182016040528015610a88578160200160208202803683370190505b50905060005b825181101561041357828181518110610aa357fe5b602002602001015160000151828281518110610abb57fe5b6001600160a01b0390921660209283029190910190910152600101610a8e565b6001600160a01b03918216600090815260676020908152604080832093909416825291909152205460ff1690565b6001600160a01b038416610b4e5760405162461bcd60e51b8152600401808060200182810382526025815260200180611e936025913960400191505060405180910390fd5b610b56610cd4565b6001600160a01b0316856001600160a01b03161480610b7c5750610b7c856101c5610cd4565b610bb75760405162461bcd60e51b8152600401808060200182810382526029815260200180611e6a6029913960400191505060405180910390fd5b6000610bc1610cd4565b9050610be1818787610bd2886113df565b610bdb886113df565b87610711565b610c28836040518060600160405280602a8152602001611f18602a913960008781526066602090815260408083206001600160a01b038d1684529091529020549190610cd9565b60008581526066602090815260408083206001600160a01b038b81168552925280832093909355871681522054610c5f9084610d70565b60008581526066602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a4610711818787878787611424565b335b90565b60008184841115610d685760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d2d578181015183820152602001610d15565b50505050905090810190601f168015610d5a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610dca576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b610de3846001600160a01b0316611595565b1561071157836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015610e71578181015183820152602001610e59565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015610eb0578181015183820152602001610e98565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015610eec578181015183820152602001610ed4565b50505050905090810190601f168015610f195780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610f3e57600080fd5b505af1925050508015610f6357506040513d6020811015610f5e57600080fd5b505160015b610ff857610f6f611d29565b80610f7a5750610fc1565b60405162461bcd60e51b8152602060048201818152835160248401528351849391928392604401919085019080838360008315610d2d578181015183820152602001610d15565b60405162461bcd60e51b8152600401808060200182810382526034815260200180611de36034913960400191505060405180910390fd5b6001600160e01b0319811663bc197c8160e01b146110475760405162461bcd60e51b8152600401808060200182810382526028815260200180611e176028913960400191505060405180910390fd5b50505050505050565b6001600160a01b0384166110955760405162461bcd60e51b8152600401808060200182810382526021815260200180611fe16021913960400191505060405180910390fd5b600061109f610cd4565b90506110b181600087610bd2886113df565b60008481526066602090815260408083206001600160a01b03891684529091529020546110de9084610d70565b60008581526066602090815260408083206001600160a01b03808b16808652918452828520959095558151898152928301889052815190948616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a461115181600087878787611424565b5050505050565b6000805b82518110156112fa5760006001600160a01b031683828151811061117c57fe5b6020026020010151600001516001600160a01b031614156111e4576040805162461bcd60e51b815260206004820152601b60248201527f526563697069656e742073686f756c642062652070726573656e740000000000604482015290519081900360640190fd5b8281815181106111f057fe5b6020026020010151602001516001600160601b03166000141561125a576040805162461bcd60e51b815260206004820181905260248201527f526f79616c74792076616c75652073686f756c6420626520706f736974697665604482015290519081900360640190fd5b82818151811061126657fe5b6020026020010151602001516001600160601b03168201915060008085815260200190815260200160002083828151811061129d57fe5b60209081029190910181015182546001818101855560009485529383902082519101805492909301516001600160601b0316600160a01b026001600160a01b039182166001600160a01b031990931692909217161790550161115c565b50612710811061133b5760405162461bcd60e51b8152600401808060200182810382526025815260200180611f426025913960400191505060405180910390fd5b611345838361159b565b505050565b600061135530611595565b15905090565b6001600160e01b031980821614156113ba576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152603460205260409020805460ff19166001179055565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061141357fe5b602090810291909101015292915050565b611436846001600160a01b0316611595565b1561071157836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156114c55781810151838201526020016114ad565b50505050905090810190601f1680156114f25780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b15801561151557600080fd5b505af192505050801561153a57506040513d602081101561153557600080fd5b505160015b61154657610f6f611d29565b6001600160e01b0319811663f23a6e6160e01b146110475760405162461bcd60e51b8152600401808060200182810382526028815260200180611e176028913960400191505060405180910390fd5b3b151590565b600081516001600160401b03811180156115b457600080fd5b506040519080825280602002602001820160405280156115de578160200160208202803683370190505b509050600082516001600160401b03811180156115fa57600080fd5b50604051908082528060200260200182016040528015611624578160200160208202803683370190505b50905060005b83518110156116b75783818151811061163f57fe5b60200260200101516000015183828151811061165757fe5b60200260200101906001600160a01b031690816001600160a01b03168152505083818151811061168357fe5b6020026020010151602001516001600160601b03168282815181106116a457fe5b602090810291909101015260010161162a565b507f99aba1d63749cfd5ad1afda7c4663840924d54eb5f005bbbeadedc6ec13674b2848383604051808481526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561172657818101518382015260200161170e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561176557818101518382015260200161174d565b505050509050019550505050505060405180910390a150505050565b600082601f830112611791578081fd5b813560206117a66117a183611d06565b611ce3565b82815281810190858301838502870184018810156117c2578586fd5b855b858110156117e0578135845292840192908401906001016117c4565b5090979650505050505050565b600082601f8301126117fd578081fd5b81356001600160401b0381111561181057fe5b611823601f8201601f1916602001611ce3565b818152846020838601011115611837578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215611863578182fd5b823561186e81611dcd565b9150602083013561187e81611dcd565b809150509250929050565b600080600080600060a086880312156118a0578081fd5b85356118ab81611dcd565b945060208601356118bb81611dcd565b935060408601356001600160401b03808211156118d6578283fd5b6118e289838a01611781565b945060608801359150808211156118f7578283fd5b61190389838a01611781565b93506080880135915080821115611918578283fd5b50611925888289016117ed565b9150509295509295909350565b600080600080600060a08688031215611949578081fd5b853561195481611dcd565b9450602086013561196481611dcd565b9350604086013592506060860135915060808601356001600160401b0381111561198c578182fd5b611925888289016117ed565b600080604083850312156119aa578182fd5b82356119b581611dcd565b91506020830135801515811461187e578182fd5b600080604083850312156119db578182fd5b82356119e681611dcd565b946020939093013593505050565b60008060008060808587031215611a09578081fd5b8435611a1481611dcd565b935060208581013593506040808701356001600160401b0380821115611a38578485fd5b818901915089601f830112611a4b578485fd5b8135611a596117a182611d06565b81815285810190848701868402860188018e1015611a75578889fd5b8895505b83861015611ae15786818f031215611a8f578889fd5b86518781018181108782111715611aa257fe5b88528135611aaf81611dcd565b8152818901356001600160601b0381168114611ac9578a8bfd5b818a0152835260019590950194918701918601611a79565b50999c989b50989960600135985050505050505050565b60008060408385031215611b0a578182fd5b82356001600160401b0380821115611b20578384fd5b818501915085601f830112611b33578384fd5b81356020611b436117a183611d06565b82815281810190858301838502870184018b1015611b5f578889fd5b8896505b84871015611b8a578035611b7681611dcd565b835260019690960195918301918301611b63565b5096505086013592505080821115611ba0578283fd5b50611bad85828601611781565b9150509250929050565b600060208284031215611bc8578081fd5b81356001600160e01b031981168114610dca578182fd5b600060208284031215611bf0578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611c385783516001600160a01b031683529284019291840191600101611c13565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611c3857835183529284019291840191600101611c60565b901515815260200190565b6000602080835283518082850152825b81811015611cb357858101830151858201604001528201611c97565b81811115611cc45783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b6040518181016001600160401b0381118282101715611cfe57fe5b604052919050565b60006001600160401b03821115611d1957fe5b5060209081020190565b60e01c90565b600060443d1015611d3957610cd6565b600481823e6308c379a0611d4d8251611d23565b14611d5757610cd6565b6040513d600319016004823e80513d6001600160401b038160248401118184111715611d865750505050610cd6565b82840192508251915080821115611da05750505050610cd6565b503d83016020828401011115611db857505050610cd6565b601f01601f1916810160200160405291505090565b6001600160a01b03811681146108d557600080fdfe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572526f79616c747920746f74616c2076616c75652073686f756c64206265203c203130303030455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368455243313135353a206d696e7420746f20746865207a65726f2061646472657373a26469706673582212205c872c8288e8e75aea47c957362202ffa79e208308e72696d59258978e48142164736f6c63430007060033";

export class TestERC1155WithRoyaltiesV1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC1155WithRoyaltiesV1> {
    return super.deploy(overrides || {}) as Promise<TestERC1155WithRoyaltiesV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestERC1155WithRoyaltiesV1 {
    return super.attach(address) as TestERC1155WithRoyaltiesV1;
  }
  connect(signer: Signer): TestERC1155WithRoyaltiesV1__factory {
    return super.connect(signer) as TestERC1155WithRoyaltiesV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1155WithRoyaltiesV1Interface {
    return new utils.Interface(_abi) as TestERC1155WithRoyaltiesV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC1155WithRoyaltiesV1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestERC1155WithRoyaltiesV1;
  }
}
